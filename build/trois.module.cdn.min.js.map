{"version":3,"file":"trois.module.cdn.min.js","sources":["../src/tools.ts","../src/core/useRaycaster.ts","../src/core/usePointer.ts","../src/core/useThree.ts","../src/core/Renderer.ts","../src/core/Camera.ts","../src/core/OrthographicCamera.ts","../src/core/PerspectiveCamera.ts","../src/core/Scene.ts","../src/core/Object3D.ts","../src/core/Group.ts","../src/core/Raycaster.ts","../src/core/CubeCamera.ts","../src/meshes/Mesh.ts","../src/geometries/Geometry.ts","../src/geometries/BoxGeometry.ts","../src/geometries/CircleGeometry.ts","../src/geometries/ConeGeometry.ts","../src/geometries/CylinderGeometry.ts","../src/geometries/DodecahedronGeometry.ts","../src/geometries/ExtrudeGeometry.ts","../src/geometries/IcosahedronGeometry.ts","../src/geometries/LatheGeometry.ts","../src/geometries/OctahedronGeometry.ts","../src/geometries/PlaneGeometry.ts","../src/geometries/PolyhedronGeometry.ts","../src/geometries/RingGeometry.ts","../src/geometries/SphereGeometry.ts","../src/geometries/ShapeGeometry.ts","../src/geometries/TetrahedronGeometry.ts","../src/geometries/TorusGeometry.ts","../src/geometries/TorusKnotGeometry.ts","../src/geometries/TubeGeometry.ts","../src/lights/Light.ts","../src/lights/AmbientLight.ts","../src/lights/DirectionalLight.ts","../src/lights/HemisphereLight.ts","../src/lights/PointLight.ts","../src/lights/RectAreaLight.ts","../src/lights/SpotLight.ts","../src/materials/Material.ts","../src/materials/MatcapMaterial.ts","../src/materials/ShaderMaterial.ts","../src/materials/SubsurfaceScatteringShader.ts","../src/materials/SubSurfaceMaterial.ts","../src/materials/Texture.ts","../src/materials/CubeTexture.ts","../src/materials/VideoTexture.ts","../src/meshes/Box.ts","../src/meshes/Circle.ts","../src/meshes/Cone.ts","../src/meshes/Cylinder.ts","../src/meshes/Dodecahedron.ts","../src/meshes/Icosahedron.ts","../src/meshes/Lathe.ts","../src/meshes/Octahedron.ts","../src/meshes/Plane.ts","../src/meshes/Polyhedron.ts","../src/meshes/Ring.ts","../src/meshes/Sphere.ts","../src/meshes/Tetrahedron.ts","../src/meshes/Text.ts","../src/meshes/Torus.ts","../src/meshes/TorusKnot.ts","../src/meshes/Tube.ts","../src/meshes/Image.ts","../src/meshes/InstancedMesh.ts","../src/meshes/Sprite.ts","../src/meshes/Points.ts","../src/models/Model.ts","../src/models/GLTF.ts","../src/models/FBX.ts","../src/effects/EffectComposer.ts","../src/effects/EffectPass.ts","../src/effects/RenderPass.ts","../src/effects/BokehPass.ts","../src/effects/FilmPass.ts","../src/effects/FXAAPass.ts","../src/effects/HalftonePass.ts","../src/effects/SMAAPass.ts","../src/effects/SSAOPass.ts","../src/shaders/default.ts","../src/shaders/TiltShift.ts","../src/effects/TiltShiftPass.ts","../src/effects/UnrealBloomPass.ts","../src/shaders/ZoomBlur.ts","../src/effects/ZoomBlurPass.ts","../src/plugin.ts","../src/use/useTextures.ts"],"sourcesContent":["import { ref, toRef, watch, WatchStopHandle } from 'vue'\n\ntype OptionSetter = (dst: any, key: string, value: any) => void\n\nexport function applyObjectProps(\n  dst: any,\n  options: Record<string, unknown>,\n  setter?: OptionSetter\n): void {\n  if (options instanceof Object) {\n    Object.entries(options).forEach(([key, value]) => {\n      if (setter) setter(dst, key, value)\n      else dst[key] = value\n    })\n  }\n}\n\nexport function bindObjectProp(\n  src: any,\n  prop: string,\n  dst: any,\n  apply = true,\n  setter?: OptionSetter\n): WatchStopHandle {\n  if (apply) applyObjectProps(dst, src[prop], setter)\n  const r = toRef(src, prop)\n  return watch(r, (value) => { applyObjectProps(dst, value, setter) })\n}\n\nexport function bindObjectProps(\n  src: any,\n  dst: any,\n  apply = true,\n  setter?: OptionSetter\n): WatchStopHandle {\n  if (apply) applyObjectProps(dst, src, setter)\n  const r = ref(src)\n  return watch(r, (value) => { applyObjectProps(dst, value, setter) }, { deep: true })\n}\n\nexport function setFromProp(o: Record<string, unknown>, prop: Record<string, unknown>): void {\n  if (prop instanceof Object) {\n    Object.entries(prop).forEach(([key, value]) => {\n      o[key] = value\n    })\n  }\n}\n\nexport function bindProps(src: any, props: string[], dst: any): void {\n  props.forEach(prop => {\n    bindProp(src, prop, dst, prop)\n  })\n}\n\nexport function bindProp(src: any, srcProp: string, dst: any, dstProp?: string): void {\n  const _dstProp = dstProp || srcProp\n  const ref = toRef(src, srcProp)\n  if (ref.value instanceof Object) {\n    setFromProp(dst[_dstProp], ref.value)\n    watch(ref, (value) => { setFromProp(dst[_dstProp], value) }, { deep: true })\n  } else {\n    if (ref.value !== undefined) dst[_dstProp] = src[srcProp]\n    watch(ref, (value) => { dst[_dstProp] = value })\n  }\n}\n\nexport function propsValues(props: Record<string, unknown>, exclude: string[] = []): Record<string, unknown> {\n  const values: Record<string, unknown> = {}\n  Object.entries(props).forEach(([key, value]) => {\n    if (!exclude || !exclude.includes(key)) {\n      values[key] = value\n    }\n  })\n  return values\n}\n\nexport function lerp(value1: number, value2: number, amount: number): number {\n  amount = amount < 0 ? 0 : amount\n  amount = amount > 1 ? 1 : amount\n  return value1 + (value2 - value1) * amount\n}\n\nexport function limit(val: number, min: number, max: number): number {\n  return val < min ? min : (val > max ? max : val)\n}\n\n// from https://github.com/pmndrs/drei/blob/master/src/useMatcapTexture.tsx\nconst MATCAP_ROOT = 'https://rawcdn.githack.com/emmelleppi/matcaps/9b36ccaaf0a24881a39062d05566c9e92be4aa0d'\nconst DEFAULT_MATCAP = '0404E8_0404B5_0404CB_3333FC'\n\nexport function getMatcapUrl(hash = DEFAULT_MATCAP, format = 1024): string {\n  const fileName = `${hash}${getMatcapFormatString(format)}.png`\n  return `${MATCAP_ROOT}/${format}/${fileName}`\n}\n\nfunction getMatcapFormatString(format: number) {\n  switch (format) {\n    case 64:\n      return '-64px'\n    case 128:\n      return '-128px'\n    case 256:\n      return '-256px'\n    case 512:\n      return '-512px'\n    default:\n      return ''\n  }\n}\n","import { Camera, Intersection, Object3D, Plane, Raycaster, Vector2, Vector3 } from 'three'\n\nexport interface RaycasterInterface {\n  position: Vector3\n  updatePosition(coords: Vector2): void\n  intersect(coords: Vector2, objects: Object3D[], recursive?: boolean): Intersection[],\n}\n\nexport interface RaycasterConfigInterface {\n  camera: Camera\n  resetPosition?: Vector3\n}\n\nexport default function useRaycaster(options: RaycasterConfigInterface): RaycasterInterface {\n  const {\n    camera,\n    resetPosition = new Vector3(0, 0, 0),\n  } = options\n\n  const raycaster = new Raycaster()\n  const position = resetPosition.clone()\n  const plane = new Plane(new Vector3(0, 0, 1), 0)\n\n  const updatePosition = (coords: Vector2) => {\n    raycaster.setFromCamera(coords, camera)\n    camera.getWorldDirection(plane.normal)\n    raycaster.ray.intersectPlane(plane, position)\n  }\n\n  const intersect = (coords: Vector2, objects: Object3D[], recursive = false) => {\n    raycaster.setFromCamera(coords, camera)\n    return raycaster.intersectObjects(objects, recursive)\n  }\n\n  return {\n    position,\n    updatePosition,\n    intersect,\n  }\n}\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport { Camera, InstancedMesh, Intersection, Object3D, Vector2, Vector3 } from 'three'\nimport useRaycaster from './useRaycaster'\n\nexport interface PointerEventInterface {\n  type: 'pointerenter' | 'pointermove' | 'pointerleave' | 'click'\n  position?: Vector2\n  positionN?: Vector2\n  positionV3?: Vector3\n}\n\nexport interface PointerIntersectEventInterface {\n  type: 'pointerenter' | 'pointerover' | 'pointermove' | 'pointerleave' | 'click'\n  component: any\n  over?: boolean\n  intersect?: Intersection\n}\n\nexport type PointerCallbackType = (e: PointerEventInterface) => void\nexport type PointerIntersectCallbackType = (e: PointerIntersectEventInterface) => void\n\nexport interface PointerPublicConfigInterface {\n  intersectMode?: 'frame'\n  intersectRecursive?: boolean\n  touch?: boolean\n  resetOnEnd?: boolean\n  onEnter?: PointerCallbackType\n  onMove?: PointerCallbackType\n  onLeave?: PointerCallbackType\n  onClick?: PointerCallbackType\n  onIntersectEnter?: PointerIntersectCallbackType\n  onIntersectOver?: PointerIntersectCallbackType\n  onIntersectMove?: PointerIntersectCallbackType\n  onIntersectLeave?: PointerIntersectCallbackType\n  onIntersectClick?: PointerIntersectCallbackType\n}\n\nexport interface PointerConfigInterface extends PointerPublicConfigInterface {\n  camera: Camera\n  domElement: HTMLCanvasElement\n  intersectObjects: Object3D[] | (() => Object3D[])\n}\n\nexport interface PointerInterface {\n  position: Vector2\n  positionN: Vector2\n  positionV3: Vector3\n  intersectObjects: Object3D[] | (() => Object3D[])\n  listeners: boolean\n  addListeners(cb: void): void\n  removeListeners(cb: void): void\n  intersect(): void\n}\n\nexport default function usePointer(options: PointerConfigInterface): PointerInterface {\n  const {\n    camera,\n    domElement,\n    intersectObjects,\n    intersectRecursive = false,\n    touch = true,\n    resetOnEnd = false,\n    onEnter = () => {},\n    onMove = () => {},\n    onLeave = () => {},\n    onClick = () => {},\n    onIntersectEnter = () => {},\n    onIntersectOver = () => {},\n    onIntersectMove = () => {},\n    onIntersectLeave = () => {},\n    onIntersectClick = () => {},\n  } = options\n\n  const position = new Vector2(0, 0)\n  const positionN = new Vector2(0, 0)\n\n  const raycaster = useRaycaster({ camera })\n  const positionV3 = raycaster.position\n\n  const obj: PointerInterface = {\n    position,\n    positionN,\n    positionV3,\n    intersectObjects,\n    listeners: false,\n    addListeners,\n    removeListeners,\n    intersect,\n  }\n\n  return obj\n\n  function reset() {\n    position.set(0, 0)\n    positionN.set(0, 0)\n    positionV3.set(0, 0, 0)\n  }\n\n  function updatePosition(event: TouchEvent | MouseEvent) {\n    let x, y\n    // @ts-ignore\n    if (event.touches && event.touches.length > 0) {\n      x = (<TouchEvent>event).touches[0].clientX\n      y = (<TouchEvent>event).touches[0].clientY\n    } else {\n      x = (<MouseEvent>event).clientX\n      y = (<MouseEvent>event).clientY\n    }\n\n    const rect = domElement.getBoundingClientRect()\n    position.x = x - rect.left\n    position.y = y - rect.top\n    positionN.x = (position.x / rect.width) * 2 - 1\n    positionN.y = -(position.y / rect.height) * 2 + 1\n    raycaster.updatePosition(positionN)\n  }\n\n  function intersect() {\n    const _intersectObjects = getIntersectObjects()\n    if (_intersectObjects.length) {\n      const intersects = raycaster.intersect(positionN, _intersectObjects, intersectRecursive)\n      const offObjects: Object3D[] = [..._intersectObjects]\n      const iMeshes: InstancedMesh[] = []\n\n      intersects.forEach(intersect => {\n        const { object } = intersect\n        const component = getComponent(object)\n\n        // only once for InstancedMesh\n        if (object instanceof InstancedMesh) {\n          if (iMeshes.indexOf(object) !== -1) return\n          iMeshes.push(object)\n        }\n\n        if (!object.userData.over) {\n          object.userData.over = true\n          const overEvent: PointerIntersectEventInterface = { type: 'pointerover', over: true, component, intersect }\n          const enterEvent: PointerIntersectEventInterface = { ...overEvent, type: 'pointerenter' }\n          onIntersectOver(overEvent)\n          onIntersectEnter(enterEvent)\n          component?.onPointerOver?.(overEvent)\n          component?.onPointerEnter?.(enterEvent)\n        }\n\n        const moveEvent: PointerIntersectEventInterface = { type: 'pointermove', component, intersect }\n        onIntersectMove(moveEvent)\n        component?.onPointerMove?.(moveEvent)\n\n        offObjects.splice(offObjects.indexOf((<Object3D>object)), 1)\n      })\n\n      offObjects.forEach(object => {\n        const component = getComponent(object)\n        if (object.userData.over) {\n          object.userData.over = false\n          const overEvent: PointerIntersectEventInterface = { type: 'pointerover', over: false, component }\n          const leaveEvent: PointerIntersectEventInterface = { ...overEvent, type: 'pointerleave' }\n          onIntersectOver(overEvent)\n          onIntersectLeave(leaveEvent)\n          component?.onPointerOver?.(overEvent)\n          component?.onPointerLeave?.(leaveEvent)\n        }\n      })\n    }\n  }\n\n  function pointerEnter(event: TouchEvent | MouseEvent) {\n    updatePosition(event)\n    onEnter({ type: 'pointerenter', position, positionN, positionV3 })\n  }\n\n  function pointerMove(event: TouchEvent | MouseEvent) {\n    updatePosition(event)\n    onMove({ type: 'pointermove', position, positionN, positionV3 })\n    intersect()\n  }\n\n  function pointerClick(event: TouchEvent | MouseEvent) {\n    updatePosition(event)\n    const _intersectObjects = getIntersectObjects()\n    if (_intersectObjects.length) {\n      const intersects = raycaster.intersect(positionN, _intersectObjects, intersectRecursive)\n      const iMeshes: InstancedMesh[] = []\n      intersects.forEach(intersect => {\n        const { object } = intersect\n        const component = getComponent(object)\n\n        // only once for InstancedMesh\n        if (object instanceof InstancedMesh) {\n          if (iMeshes.indexOf(object) !== -1) return\n          iMeshes.push(object)\n        }\n\n        const event: PointerIntersectEventInterface = { type: 'click', component, intersect }\n        onIntersectClick(event)\n        component?.onClick?.(event)\n      })\n    }\n    onClick({ type: 'click', position, positionN, positionV3 })\n  }\n\n  function pointerLeave() {\n    if (resetOnEnd) reset()\n    onLeave({ type: 'pointerleave' })\n  }\n\n  function getComponent(object: Object3D) {\n    if (object.userData.component) return object.userData.component\n\n    let parent = object.parent\n    while (parent) {\n      if (parent.userData.component) {\n        return parent.userData.component\n      }\n      parent = parent.parent\n    }\n\n    return undefined\n  }\n\n  function getIntersectObjects() {\n    if (typeof intersectObjects === 'function') {\n      return intersectObjects()\n    } else return intersectObjects\n  }\n\n  function addListeners() {\n    domElement.addEventListener('mouseenter', pointerEnter)\n    domElement.addEventListener('mousemove', pointerMove)\n    domElement.addEventListener('mouseleave', pointerLeave)\n    domElement.addEventListener('click', pointerClick)\n    if (touch) {\n      domElement.addEventListener('touchstart', pointerEnter)\n      domElement.addEventListener('touchmove', pointerMove)\n      domElement.addEventListener('touchend', pointerLeave)\n    }\n    obj.listeners = true\n  }\n\n  function removeListeners() {\n    domElement.removeEventListener('mouseenter', pointerEnter)\n    domElement.removeEventListener('mousemove', pointerMove)\n    domElement.removeEventListener('mouseleave', pointerLeave)\n    domElement.removeEventListener('click', pointerClick)\n\n    domElement.removeEventListener('touchstart', pointerEnter)\n    domElement.removeEventListener('touchmove', pointerMove)\n    domElement.removeEventListener('touchend', pointerLeave)\n    obj.listeners = false\n  }\n}\n","import { Camera, Object3D, OrthographicCamera, PerspectiveCamera, Scene, WebGLRenderer, WebGLRendererParameters } from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\nimport usePointer, { PointerConfigInterface, PointerPublicConfigInterface, PointerInterface } from './usePointer'\n\nexport interface SizeInterface {\n  width: number\n  height: number\n  wWidth: number\n  wHeight: number\n  ratio: number\n}\n\nexport interface ThreeConfigInterface {\n  params?: WebGLRendererParameters\n  canvas?: HTMLCanvasElement\n  antialias: boolean\n  alpha: boolean\n  autoClear: boolean\n  orbitCtrl: boolean | Record<string, unknown>\n  pointer: boolean | PointerPublicConfigInterface\n  resize: boolean | string\n  width?: number\n  height?: number\n  onResize?(size: SizeInterface): void\n  [index:string]: any\n}\n\nexport interface ThreeInterface {\n  config: ThreeConfigInterface\n  renderer: WebGLRenderer\n  composer?: EffectComposer\n  camera?: Camera\n  cameraCtrl?: OrbitControls\n  scene?: Scene\n  pointer?: PointerInterface\n  size: SizeInterface\n  init(): boolean\n  dispose(): void\n  render(): void\n  renderC(): void\n  setSize(width: number, height: number): void\n  addIntersectObject(o: Object3D): void\n  removeIntersectObject(o: Object3D): void\n}\n\n/**\n * Three.js helper\n */\nexport default function useThree(params: ThreeConfigInterface): ThreeInterface {\n  // default config\n  const config: ThreeConfigInterface = {\n    antialias: true,\n    alpha: false,\n    autoClear: true,\n    orbitCtrl: false,\n    pointer: false,\n    resize: false,\n    width: 300,\n    height: 150,\n  }\n\n  if (params) {\n    Object.entries(params).forEach(([key, value]) => {\n      config[key] = value\n    })\n  }\n\n  // size\n  const size: SizeInterface = {\n    width: 1, height: 1,\n    wWidth: 1, wHeight: 1,\n    ratio: 1,\n  }\n\n  const beforeRenderCallbacks: {(): void}[] = []\n\n  const intersectObjects: Object3D[] = []\n\n  const renderer = createRenderer()\n\n  // returned object\n  const obj: ThreeInterface = {\n    config,\n    renderer,\n    size,\n    init,\n    dispose,\n    render,\n    renderC,\n    setSize,\n    addIntersectObject, removeIntersectObject,\n  }\n\n  return obj\n\n  /**\n   * create WebGLRenderer\n   */\n  function createRenderer(): WebGLRenderer {\n    const renderer = new WebGLRenderer({ canvas: config.canvas, antialias: config.antialias, alpha: config.alpha, ...config.params })\n    renderer.autoClear = config.autoClear\n    return renderer\n  }\n\n  /**\n   * init three\n   */\n  function init() {\n    if (!obj.scene) {\n      console.error('Missing Scene')\n      return false\n    }\n\n    if (!obj.camera) {\n      console.error('Missing Camera')\n      return false\n    }\n\n    if (config.resize) {\n      onResize()\n      window.addEventListener('resize', onResize)\n    } else if (config.width && config.height) {\n      setSize(config.width, config.height)\n    }\n\n    initPointer()\n\n    if (config.orbitCtrl) {\n      const cameraCtrl = new OrbitControls(obj.camera, obj.renderer.domElement)\n      if (config.orbitCtrl instanceof Object) {\n        Object.entries(config.orbitCtrl).forEach(([key, value]) => {\n          // @ts-ignore\n          cameraCtrl[key] = value\n        })\n      }\n      onBeforeRender(() => { cameraCtrl.update() })\n      obj.cameraCtrl = cameraCtrl\n    }\n\n    return true\n  }\n\n  /**\n   * init pointer\n   */\n  function initPointer() {\n    let pointerConf: PointerConfigInterface = {\n      camera: obj.camera!,\n      domElement: obj.renderer!.domElement,\n      intersectObjects,\n    }\n\n    if (config.pointer && config.pointer instanceof Object) {\n      pointerConf = { ...pointerConf, ...config.pointer }\n    }\n\n    const pointer = obj.pointer = usePointer(pointerConf)\n    if (config.pointer || intersectObjects.length) {\n      pointer.addListeners()\n      if (pointerConf.intersectMode === 'frame') {\n        onBeforeRender(pointer.intersect)\n      }\n    }\n  }\n\n  /**\n   * add before render callback\n   */\n  function onBeforeRender(cb: {(): void}) {\n    beforeRenderCallbacks.push(cb)\n  }\n\n  /**\n   * default render\n   */\n  function render() {\n    // if (obj.cameraCtrl) obj.cameraCtrl.update()\n    beforeRenderCallbacks.forEach(c => c())\n    obj.renderer!.render(obj.scene!, obj.camera!)\n  }\n\n  /**\n   * composer render\n   */\n  function renderC() {\n    // if (obj.cameraCtrl) obj.cameraCtrl.update()\n    beforeRenderCallbacks.forEach(c => c())\n    obj.composer!.render()\n  }\n\n  /**\n   * add intersect object\n   */\n  function addIntersectObject(o: Object3D) {\n    if (intersectObjects.indexOf(o) === -1) {\n      intersectObjects.push(o)\n    }\n    // add listeners if needed\n    if (obj.pointer && !obj.pointer.listeners) {\n      obj.pointer.addListeners()\n    }\n  }\n\n  /**\n   * remove intersect object\n   */\n  function removeIntersectObject(o: Object3D) {\n    const i = intersectObjects.indexOf(o)\n    if (i !== -1) {\n      intersectObjects.splice(i, 1)\n    }\n    // remove listeners if needed\n    if (obj.pointer && !config.pointer && intersectObjects.length === 0) {\n      obj.pointer.removeListeners()\n    }\n  }\n\n  /**\n   * remove listeners and dispose\n   */\n  function dispose() {\n    // beforeRenderCallbacks = []\n    window.removeEventListener('resize', onResize)\n    if (obj.pointer) obj.pointer.removeListeners()\n    if (obj.cameraCtrl) obj.cameraCtrl.dispose()\n    if (obj.renderer) obj.renderer.dispose()\n  }\n\n  /**\n   * resize listener\n   */\n  function onResize() {\n    if (config.resize === 'window') {\n      setSize(window.innerWidth, window.innerHeight)\n    } else {\n      const elt = obj.renderer!.domElement.parentNode as Element\n      if (elt) setSize(elt.clientWidth, elt.clientHeight)\n    }\n    config.onResize?.(size)\n  }\n\n  /**\n   * update renderer size and camera\n   */\n  function setSize(width: number, height: number) {\n    size.width = width\n    size.height = height\n    size.ratio = width / height\n\n    obj.renderer!.setSize(width, height, false)\n\n    // already done in EffectComposer\n    // if (obj.composer) {\n    //   obj.composer.setSize(width, height)\n    // }\n\n    const camera = (<Camera>obj.camera!)\n    if (camera.type === 'PerspectiveCamera') {\n      const pCamera = (<PerspectiveCamera>camera)\n      pCamera.aspect = size.ratio\n      pCamera.updateProjectionMatrix()\n    }\n\n    if (camera.type === 'OrthographicCamera') {\n      const oCamera = (<OrthographicCamera>camera)\n      size.wWidth = oCamera.right - oCamera.left\n      size.wHeight = oCamera.top - oCamera.bottom\n    } else {\n      const wsize = getCameraSize()\n      size.wWidth = wsize[0]\n      size.wHeight = wsize[1]\n    }\n  }\n\n  /**\n   * calculate camera visible area size\n   */\n  function getCameraSize() {\n    const camera = (<PerspectiveCamera>obj.camera!)\n    const vFOV = (camera.fov * Math.PI) / 180\n    const h = 2 * Math.tan(vFOV / 2) * Math.abs(camera.position.z)\n    const w = h * camera.aspect\n    return [w, h]\n  }\n}\n","/* eslint-disable no-use-before-define */\nimport { Camera, Scene, WebGLRenderer, WebGLRendererParameters } from 'three'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { ComponentPublicInstance, defineComponent, InjectionKey, PropType, watchEffect } from 'vue'\nimport { bindObjectProp } from '../tools'\nimport { PointerInterface, PointerPublicConfigInterface } from './usePointer'\nimport useThree, { SizeInterface, ThreeConfigInterface, ThreeInterface } from './useThree'\n\ntype CallbackType<T> = (event: T) => void\n\n// type EventType = 'init' | 'mounted' | 'beforerender' | 'afterrender' | 'resize'\n\nexport interface EventInterface {\n  type: 'init' | 'mounted'\n  renderer: RendererInterface\n}\n\nexport interface RenderEventInterface {\n  type: 'beforerender' | 'afterrender'\n  renderer: RendererInterface\n  time: number\n}\n\nexport interface ResizeEventInterface {\n  type: 'resize'\n  renderer: RendererInterface\n  size: SizeInterface\n}\n\ntype InitCallbackType = CallbackType<EventInterface>\ntype MountedCallbackType = CallbackType<EventInterface>\ntype RenderCallbackType = CallbackType<RenderEventInterface>\ntype ResizeCallbackType = CallbackType<ResizeEventInterface>\n// type CallbackTypes = InitCallbackType | MountedCallbackType | RenderCallbackType | ResizeCallbackType\n\n// interface EventMap {\n//   'init': EventInterface;\n//   'mounted': EventInterface;\n//   'beforerender': RenderEventInterface;\n//   'afterrender': RenderEventInterface;\n//   'resize': ResizeEventInterface;\n// }\n\ninterface EventCallbackMap {\n  'init': InitCallbackType;\n  'mounted': MountedCallbackType;\n  'beforerender': RenderCallbackType;\n  'afterrender': RenderCallbackType;\n  'resize': ResizeCallbackType;\n}\n\ninterface RenderFunctionEventInterface {\n  renderer: RendererInterface\n  time: number\n}\n\ninterface RendererSetupInterface {\n  canvas: HTMLCanvasElement\n  three: ThreeInterface\n  renderer: WebGLRenderer\n  size: SizeInterface\n  renderFn(e: RenderFunctionEventInterface): void\n  raf: boolean\n\n  $pointer?: PointerInterface\n\n  initCallbacks: InitCallbackType[]\n  mountedCallbacks: MountedCallbackType[]\n  beforeRenderCallbacks: RenderCallbackType[]\n  afterRenderCallbacks: RenderCallbackType[]\n  resizeCallbacks: ResizeCallbackType[]\n}\n\nexport interface RendererInterface extends RendererSetupInterface {\n  scene?: Scene\n  camera?: Camera\n  composer?: EffectComposer\n\n  onInit(cb: InitCallbackType): void\n  onMounted(cb: MountedCallbackType): void\n\n  onBeforeRender(cb: RenderCallbackType): void\n  offBeforeRender(cb: RenderCallbackType): void\n  onAfterRender(cb: RenderCallbackType): void\n  offAfterRender(cb: RenderCallbackType): void\n\n  onResize(cb: ResizeCallbackType): void\n  offResize(cb: ResizeCallbackType): void\n\n  addListener<T extends keyof EventCallbackMap>(t: T, cb: EventCallbackMap[T]): void\n  removeListener<T extends keyof EventCallbackMap>(t: T, cb: EventCallbackMap[T]): void\n}\n\nexport interface RendererPublicInterface extends ComponentPublicInstance, RendererInterface {}\n\nexport const RendererInjectionKey: InjectionKey<RendererPublicInterface> = Symbol('Renderer')\n\nexport default defineComponent({\n  name: 'Renderer',\n  props: {\n    params: { type: Object as PropType<WebGLRendererParameters>, default: () => ({}) },\n    antialias: Boolean,\n    alpha: Boolean,\n    autoClear: { type: Boolean, default: true },\n    orbitCtrl: { type: [Boolean, Object] as PropType<boolean | Record<string, unknown>>, default: false },\n    pointer: { type: [Boolean, Object] as PropType<boolean | PointerPublicConfigInterface>, default: false },\n    resize: { type: [Boolean, String] as PropType<boolean | string>, default: false },\n    shadow: Boolean,\n    width: String,\n    height: String,\n    pixelRatio: Number,\n    xr: Boolean,\n    props: { type: Object, default: () => ({}) },\n    onReady: Function as PropType<(r: RendererInterface) => void>,\n  },\n  inheritAttrs: false,\n  setup(props, { attrs }): RendererSetupInterface {\n    const initCallbacks: InitCallbackType[] = []\n    const mountedCallbacks: MountedCallbackType[] = []\n    const beforeRenderCallbacks: RenderCallbackType[] = []\n    const afterRenderCallbacks: RenderCallbackType[] = []\n    const resizeCallbacks: ResizeCallbackType[] = []\n\n    const canvas = document.createElement('canvas')\n    Object.entries(attrs).forEach(([key, value]) => {\n      const matches = key.match(/^on([A-Z][a-zA-Z]*)$/)\n      if (matches) {\n        canvas.addEventListener(matches[1].toLowerCase(), value as {(): void })\n      } else {\n        canvas.setAttribute(key, value as string)\n      }\n    })\n\n    const config: ThreeConfigInterface = {\n      canvas,\n      params: props.params,\n      antialias: props.antialias,\n      alpha: props.alpha,\n      autoClear: props.autoClear,\n      orbitCtrl: props.orbitCtrl,\n      pointer: props.pointer,\n      resize: props.resize,\n    }\n\n    if (props.width) config.width = parseInt(props.width)\n    if (props.height) config.height = parseInt(props.height)\n\n    const three = useThree(config)\n    bindObjectProp(props, 'props', three.renderer)\n\n    watchEffect(() => {\n      if (props.pixelRatio) three.renderer.setPixelRatio(props.pixelRatio)\n    })\n\n    const renderFn: {(): void} = () => {}\n\n    return {\n      canvas,\n      three,\n      renderer: three.renderer,\n      size: three.size,\n      renderFn,\n      raf: true,\n      initCallbacks,\n      mountedCallbacks,\n      beforeRenderCallbacks,\n      afterRenderCallbacks,\n      resizeCallbacks,\n    }\n  },\n  computed: {\n    camera: {\n      get: function(): Camera | undefined { return this.three.camera },\n      set: function(camera: Camera): void { this.three.camera = camera },\n    },\n    scene: {\n      get: function(): Scene | undefined { return this.three.scene },\n      set: function(scene: Scene): void { this.three.scene = scene },\n    },\n    composer: {\n      get: function(): EffectComposer | undefined { return this.three.composer },\n      set: function(composer: EffectComposer): void { this.three.composer = composer },\n    },\n  },\n  provide() {\n    return {\n      [RendererInjectionKey as symbol]: this,\n    }\n  },\n  mounted() {\n    // appendChild won't work on reload\n    this.$el.parentNode.insertBefore(this.canvas, this.$el)\n\n    if (this.three.init()) {\n      if (this.three.pointer) {\n        this.$pointer = this.three.pointer\n      }\n\n      // TODO : don't use config\n      this.three.config.onResize = (size) => {\n        this.resizeCallbacks.forEach(e => e({ type: 'resize', renderer: this, size }))\n      }\n\n      if (this.shadow) {\n        this.renderer.shadowMap.enabled = true\n      }\n\n      this.renderFn = this.three.composer ? this.three.renderC : this.three.render\n\n      this.initCallbacks.forEach(e => e({ type: 'init', renderer: this }))\n      this.onReady?.(this as RendererInterface)\n\n      if (this.xr) {\n        this.renderer.xr.enabled = true\n        this.renderer.setAnimationLoop(this.render)\n      } else {\n        requestAnimationFrame(this.renderLoop)\n      }\n    }\n\n    this.mountedCallbacks.forEach(e => e({ type: 'mounted', renderer: this }))\n  },\n  beforeUnmount() {\n    this.canvas.remove()\n    this.beforeRenderCallbacks = []\n    this.afterRenderCallbacks = []\n    this.raf = false\n    this.three.dispose()\n  },\n  methods: {\n    onInit(cb: InitCallbackType) { this.addListener('init', cb) },\n    onMounted(cb: MountedCallbackType) { this.addListener('mounted', cb) },\n    onBeforeRender(cb: RenderCallbackType) { this.addListener('beforerender', cb) },\n    offBeforeRender(cb: RenderCallbackType) { this.removeListener('beforerender', cb) },\n    onAfterRender(cb: RenderCallbackType) { this.addListener('afterrender', cb) },\n    offAfterRender(cb: RenderCallbackType) { this.removeListener('afterrender', cb) },\n    onResize(cb: ResizeCallbackType) { this.addListener('resize', cb) },\n    offResize(cb: ResizeCallbackType) { this.removeListener('resize', cb) },\n\n    addListener(type: string, cb: {(e?: any): void}) {\n      const callbacks = this.getCallbacks(type)\n      callbacks.push(cb)\n    },\n\n    removeListener(type: string, cb: {(e?: any): void}) {\n      const callbacks = this.getCallbacks(type)\n      const index = callbacks.indexOf(cb)\n      if (index !== -1) callbacks.splice(index, 1)\n    },\n\n    getCallbacks(type: string) {\n      if (type === 'init') {\n        return this.initCallbacks\n      } else if (type === 'mounted') {\n        return this.mountedCallbacks\n      } else if (type === 'beforerender') {\n        return this.beforeRenderCallbacks\n      } else if (type === 'afterrender') {\n        return this.afterRenderCallbacks\n      } else {\n        return this.resizeCallbacks\n      }\n    },\n\n    render(time: number) {\n      this.beforeRenderCallbacks.forEach(e => e({ type: 'beforerender', renderer: this, time }))\n      // this.onFrame?.(cbParams)\n      this.renderFn({ renderer: this, time })\n      this.afterRenderCallbacks.forEach(e => e({ type: 'afterrender', renderer: this, time }))\n    },\n    renderLoop(time: number) {\n      if (this.raf) requestAnimationFrame(this.renderLoop)\n      this.render(time)\n    },\n  },\n  render() {\n    return this.$slots.default ? this.$slots.default() : []\n  },\n  __hmrId: 'Renderer',\n})\n","import { defineComponent } from 'vue'\n// import { Camera } from 'three'\n// import { RendererInjectionKey, RendererInterface } from './Renderer'\n// import Object3D from './Object3D'\n\n// export interface CameraSetupInterface {\n//   renderer?: RendererInterface\n//   camera: Camera\n// }\n\nexport default defineComponent({\n  // TODO: eventually extend Object3D\n  // extends: Object3D,\n\n  props: {\n    props: { type: Object, default: () => ({}) },\n  },\n\n  // inject: { renderer: RendererInjectionKey as symbol },\n\n  // setup(): CameraSetupInterface {\n  //   return {}\n  // },\n\n  render() {\n    return this.$slots.default ? this.$slots.default() : []\n  },\n})\n\nexport function cameraSetProp(camera: any, key: string, value: any, updateProjectionMatrix = true) {\n  camera[key] = value\n  if (updateProjectionMatrix) camera.updateProjectionMatrix()\n}\n","import { defineComponent, inject, PropType, watch } from 'vue'\nimport { OrthographicCamera } from 'three'\nimport { bindObjectProp, bindProp } from '../tools'\nimport Camera, { cameraSetProp } from './Camera'\nimport { Vector3PropInterface } from './Object3D'\nimport { RendererInjectionKey } from './Renderer'\n\nexport default defineComponent({\n  extends: Camera,\n  name: 'OrthographicCamera',\n  props: {\n    left: { type: Number, default: -1 },\n    right: { type: Number, default: 1 },\n    top: { type: Number, default: 1 },\n    bottom: { type: Number, default: -1 },\n    near: { type: Number, default: 0.1 },\n    far: { type: Number, default: 2000 },\n    zoom: { type: Number, default: 1 },\n    position: { type: Object as PropType<Vector3PropInterface>, default: () => ({ x: 0, y: 0, z: 0 }) },\n  },\n  setup(props) {\n    const renderer = inject(RendererInjectionKey)\n    if (!renderer) {\n      console.error('Renderer not found')\n      return\n    }\n\n    const camera = new OrthographicCamera(props.left, props.right, props.top, props.bottom, props.near, props.far)\n    renderer.camera = camera\n\n    bindProp(props, 'position', camera)\n    bindObjectProp(props, 'props', camera, true, cameraSetProp);\n\n    ['left', 'right', 'top', 'bottom', 'near', 'far', 'zoom'].forEach(p => {\n      // @ts-ignore\n      watch(() => props[p], (value) => {\n        cameraSetProp(camera, p, value)\n      })\n    })\n\n    return { renderer, camera }\n  },\n  __hmrId: 'OrthographicCamera',\n})\n","import { defineComponent, inject, PropType, watch } from 'vue'\nimport { PerspectiveCamera } from 'three'\nimport { bindObjectProp, bindProp } from '../tools'\nimport Camera, { cameraSetProp } from './Camera'\nimport { Vector3PropInterface } from './Object3D'\nimport { RendererInjectionKey } from './Renderer'\n\nexport default defineComponent({\n  extends: Camera,\n  name: 'PerspectiveCamera',\n  props: {\n    aspect: { type: Number, default: 1 },\n    far: { type: Number, default: 2000 },\n    fov: { type: Number, default: 50 },\n    near: { type: Number, default: 0.1 },\n    position: { type: Object as PropType<Vector3PropInterface>, default: () => ({ x: 0, y: 0, z: 0 }) },\n    lookAt: { type: Object as PropType<Vector3PropInterface>, default: null },\n  },\n  setup(props) {\n    const renderer = inject(RendererInjectionKey)\n    if (!renderer) {\n      console.error('Renderer not found')\n      return\n    }\n\n    const camera = new PerspectiveCamera(props.fov, props.aspect, props.near, props.far)\n    renderer.camera = camera\n\n    bindProp(props, 'position', camera)\n\n    if (props.lookAt) camera.lookAt(props.lookAt.x ?? 0, props.lookAt.y, props.lookAt.z)\n    watch(() => props.lookAt, (v) => { camera.lookAt(v.x ?? 0, v.y, v.z) }, { deep: true })\n\n    bindObjectProp(props, 'props', camera, true, cameraSetProp);\n\n    ['aspect', 'far', 'fov', 'near'].forEach(p => {\n      // @ts-ignore\n      watch(() => props[p], (value) => {\n        cameraSetProp(camera, p, value)\n      })\n    })\n\n    return { renderer, camera }\n  },\n  __hmrId: 'PerspectiveCamera',\n})\n","import { defineComponent, inject, InjectionKey, provide, watch } from 'vue'\nimport { Scene, Color, Object3D, Texture } from 'three'\nimport { RendererInjectionKey } from './Renderer'\n\nexport const SceneInjectionKey: InjectionKey<Scene> = Symbol('Scene')\n\nexport default defineComponent({\n  name: 'Scene',\n  props: {\n    background: [String, Number, Object],\n  },\n  setup(props) {\n    const renderer = inject(RendererInjectionKey)\n    const scene = new Scene()\n\n    if (!renderer) {\n      console.error('Renderer not found')\n      return\n    }\n\n    renderer.scene = scene\n    provide(SceneInjectionKey, scene)\n\n    const setBackground = (value: any): void => {\n      if (!value) return\n      if (typeof value === 'string' || typeof value === 'number') {\n        if (scene.background instanceof Color) scene.background.set(value)\n        else scene.background = new Color(value)\n      } else if (value instanceof Texture) {\n        scene.background = value\n      }\n    }\n\n    setBackground(props.background)\n    watch(() => props.background, setBackground)\n\n    const add = (o: Object3D): void => { scene.add(o) }\n    const remove = (o: Object3D): void => { scene.remove(o) }\n\n    return { scene, add, remove }\n  },\n  render() {\n    return this.$slots.default ? this.$slots.default() : []\n  },\n  __hmrId: 'Scene',\n})\n","import { Object3D, Scene } from 'three'\nimport { ComponentPublicInstance, defineComponent, getCurrentInstance, PropType, watch } from 'vue'\nimport { bindObjectProp, bindProp } from '../tools'\nimport { RendererInjectionKey, RendererInterface } from './Renderer'\nimport { SceneInjectionKey } from './Scene'\n\nexport interface Object3DSetupInterface {\n  renderer?: RendererInterface\n  scene?: Scene\n  o3d?: Object3D\n  parent?: ComponentPublicInstance\n}\n\nexport interface Object3DInterface extends Object3DSetupInterface {\n  addToParent(o?: Object3D): boolean\n  removeFromParent(o?: Object3D): boolean\n  add(o: Object3D): void\n  remove(o: Object3D): void\n}\n\nexport interface Object3DPublicInterface extends ComponentPublicInstance, Object3DInterface {}\n\n// export function object3DSetup(): Object3DSetupInterface {\n//   const renderer = inject(RendererInjectionKey)\n//   const scene = inject(SceneInjectionKey)\n//   return { scene, renderer }\n// }\n\nexport const pointerProps = {\n  onPointerEnter: Function,\n  onPointerOver: Function,\n  onPointerMove: Function,\n  onPointerLeave: Function,\n  onPointerDown: Function,\n  onPointerUp: Function,\n  onClick: Function,\n}\n\nexport interface Vector2PropInterface {\n  x?: number\n  y?: number\n  width?: number\n  height?: number\n}\n\nexport interface Vector3PropInterface extends Vector2PropInterface {\n  z?: number\n}\n\nexport interface EulerPropInterface extends Vector3PropInterface {\n  order?: 'XYZ' | 'YZX' | 'ZXY' | 'XZY' | 'YXZ' | 'ZYX'\n}\n\nexport default defineComponent({\n  name: 'Object3D',\n  // inject for sub components\n  inject: {\n    renderer: RendererInjectionKey as symbol,\n    scene: SceneInjectionKey as symbol,\n  },\n  emits: ['created', 'ready'],\n  props: {\n    position: { type: Object as PropType<Vector3PropInterface>, default: () => ({ x: 0, y: 0, z: 0 }) },\n    rotation: { type: Object as PropType<EulerPropInterface>, default: () => ({ x: 0, y: 0, z: 0 }) },\n    scale: { type: Object as PropType<Vector3PropInterface>, default: () => ({ x: 1, y: 1, z: 1, order: 'XYZ' }) },\n    lookAt: { type: Object as PropType<Vector3PropInterface>, default: null },\n    userData: { type: Object, default: () => ({}) },\n    visible: { type: Boolean, default: true },\n    props: { type: Object, default: () => ({}) },\n    disableAdd: { type: Boolean, default: false },\n    disableRemove: { type: Boolean, default: false },\n    ...pointerProps,\n  },\n  setup(): Object3DSetupInterface {\n    // return object3DSetup()\n    return {}\n  },\n  created() {\n    if (!this.renderer) {\n      console.error('Missing parent Renderer')\n    }\n    if (!this.scene) {\n      console.error('Missing parent Scene')\n    }\n  },\n  unmounted() {\n    if (!this.disableRemove) this.removeFromParent()\n    if (this.o3d) {\n      if (this.renderer) this.renderer.three.removeIntersectObject(this.o3d)\n    }\n  },\n  methods: {\n    initObject3D(o3d: Object3D) {\n      this.o3d = o3d\n      o3d.userData.component = this\n\n      if (this.onPointerEnter ||\n        this.onPointerOver ||\n        this.onPointerMove ||\n        this.onPointerLeave ||\n        this.onPointerDown ||\n        this.onPointerUp ||\n        this.onClick) {\n        if (this.renderer) this.renderer.three.addIntersectObject(o3d)\n      }\n\n      bindProp(this, 'position', o3d)\n      bindProp(this, 'rotation', o3d)\n      bindProp(this, 'scale', o3d)\n      bindProp(this, 'userData', o3d.userData)\n      bindProp(this, 'visible', o3d)\n\n      bindObjectProp(this, 'props', o3d)\n\n      this.$emit('created', o3d)\n\n      if (this.lookAt) o3d.lookAt(this.lookAt.x ?? 0, this.lookAt.y, this.lookAt.z)\n      watch(() => this.lookAt, (v) => { o3d.lookAt(v.x ?? 0, v.y, v.z) }, { deep: true })\n\n      this.parent = this.getParent()\n      if (!this.disableAdd) {\n        if (this.addToParent()) this.$emit('ready', this)\n        else console.error('Missing parent (Scene, Group...)')\n      }\n    },\n    getParent(): undefined | ComponentPublicInstance {\n      let parent = this.$parent\n\n      if (!parent) {\n        // for script setup\n        const instance = getCurrentInstance() as any // ctx is internal\n        if (instance && instance.parent) parent = instance.parent.ctx\n      }\n\n      while (parent) {\n        if ((parent as any).add) return parent\n        parent = parent.$parent\n      }\n      return undefined\n    },\n    addToParent(o?: Object3D) {\n      const o3d = o || this.o3d\n      if (this.parent) {\n        (this.parent as any).add(o3d)\n        return true\n      }\n      return false\n    },\n    removeFromParent(o?: Object3D) {\n      const o3d = o || this.o3d\n      if (this.parent) {\n        (this.parent as any).remove(o3d)\n        return true\n      }\n      return false\n    },\n    add(o: Object3D) { this.o3d?.add(o) },\n    remove(o: Object3D) { this.o3d?.remove(o) },\n  },\n  render() {\n    return this.$slots.default ? this.$slots.default() : []\n  },\n  __hmrId: 'Object3D',\n})\n","import { defineComponent } from 'vue'\nimport { Group } from 'three'\nimport Object3D from './Object3D'\n\nexport default defineComponent({\n  name: 'Group',\n  extends: Object3D,\n  setup() {\n    return {\n      group: new Group(),\n    }\n  },\n  created() {\n    this.initObject3D(this.group)\n  },\n  __hmrId: 'Group',\n})\n","import { defineComponent, inject, PropType } from 'vue'\nimport usePointer, { PointerInterface, PointerIntersectCallbackType } from './usePointer'\nimport { RendererInjectionKey, RendererInterface } from './Renderer'\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst emptyCallBack: PointerIntersectCallbackType = () => {}\n\ninterface RaycasterSetupInterface {\n  renderer?: RendererInterface\n  pointer?: PointerInterface\n}\n\nexport default defineComponent({\n  name: 'Raycaster',\n  props: {\n    onPointerEnter: { type: Function as PropType<PointerIntersectCallbackType>, default: emptyCallBack },\n    onPointerOver: { type: Function as PropType<PointerIntersectCallbackType>, default: emptyCallBack },\n    onPointerMove: { type: Function as PropType<PointerIntersectCallbackType>, default: emptyCallBack },\n    onPointerLeave: { type: Function as PropType<PointerIntersectCallbackType>, default: emptyCallBack },\n    onClick: { type: Function as PropType<PointerIntersectCallbackType>, default: emptyCallBack },\n    intersectMode: { type: String, default: 'move' },\n    intersectRecursive: { type: Boolean, default: false },\n  },\n  setup(): RaycasterSetupInterface {\n    const renderer = inject(RendererInjectionKey)\n    return { renderer }\n  },\n  mounted() {\n    if (!this.renderer) {\n      console.error('Renderer not found')\n      return\n    }\n    const renderer = this.renderer\n\n    this.renderer.onMounted(() => {\n      if (!renderer.camera) return\n\n      this.pointer = usePointer({\n        camera: renderer.camera,\n        domElement: renderer.canvas,\n        intersectObjects: () => renderer.scene ? renderer.scene.children : [],\n        intersectRecursive: this.intersectRecursive,\n        onIntersectEnter: this.onPointerEnter,\n        onIntersectOver: this.onPointerOver,\n        onIntersectMove: this.onPointerMove,\n        onIntersectLeave: this.onPointerLeave,\n        onIntersectClick: this.onClick,\n      })\n      this.pointer.addListeners()\n\n      if (this.intersectMode === 'frame') {\n        renderer.onBeforeRender(this.pointer.intersect)\n      }\n    })\n  },\n  unmounted() {\n    if (this.pointer) {\n      this.pointer.removeListeners()\n      this.renderer?.offBeforeRender(this.pointer.intersect)\n    }\n  },\n  render() {\n    return []\n  },\n  __hmrId: 'Raycaster',\n})\n","import { defineComponent, inject, onUnmounted, PropType } from 'vue'\nimport { CubeCamera, LinearMipmapLinearFilter, Mesh, RGBAFormat, WebGLCubeRenderTarget } from 'three'\nimport Object3D from './Object3D'\nimport { RendererInjectionKey } from './Renderer'\n\ninterface CubeCameraSetupInterface {\n  cubeRT?: WebGLCubeRenderTarget\n  cubeCamera?: CubeCamera\n  updateRT?: {(): void}\n}\n\nexport default defineComponent({\n  extends: Object3D,\n  props: {\n    cubeRTSize: { type: Number, default: 256 },\n    cubeCameraNear: { type: Number, default: 0.1 },\n    cubeCameraFar: { type: Number, default: 2000 },\n    autoUpdate: Boolean,\n    hideMeshes: { type: Array as PropType<Mesh[]>, default: () => ([]) },\n  },\n  setup(props): CubeCameraSetupInterface {\n    const rendererC = inject(RendererInjectionKey)\n    if (!rendererC || !rendererC.scene) {\n      console.error('Missing Renderer / Scene')\n      return {}\n    }\n\n    const renderer = rendererC.renderer, scene = rendererC.scene\n    const cubeRT = new WebGLCubeRenderTarget(props.cubeRTSize, { format: RGBAFormat, generateMipmaps: true, minFilter: LinearMipmapLinearFilter })\n    const cubeCamera = new CubeCamera(props.cubeCameraNear, props.cubeCameraFar, cubeRT)\n    const updateRT = () => {\n      props.hideMeshes.forEach(m => { m.visible = false })\n      cubeCamera.update(renderer, scene)\n      props.hideMeshes.forEach(m => { m.visible = true })\n    }\n\n    if (props.autoUpdate) {\n      rendererC.onBeforeRender(updateRT)\n      onUnmounted(() => { rendererC.offBeforeRender(updateRT) })\n    } else {\n      rendererC.onMounted(updateRT)\n    }\n\n    return { cubeRT, cubeCamera, updateRT }\n  },\n  created() {\n    if (this.cubeCamera) this.initObject3D(this.cubeCamera)\n  },\n  render() {\n    return []\n  },\n  __hmrId: 'CubeCamera',\n})\n","import { ComponentPropsOptions, ComponentPublicInstance, defineComponent, InjectionKey, watch } from 'vue'\nimport { BufferGeometry, Material, Mesh as TMesh } from 'three'\nimport Object3D, { Object3DSetupInterface } from '../core/Object3D'\nimport { bindProp } from '../tools'\n\nexport interface MeshSetupInterface extends Object3DSetupInterface {\n  mesh?: TMesh\n  geometry?: BufferGeometry\n  material?: Material | Material[]\n  loading?: boolean\n}\n\nexport interface MeshInterface extends MeshSetupInterface {\n  setGeometry(g: BufferGeometry): void\n  setMaterial(m: Material): void\n}\n\nexport interface MeshPublicInterface extends ComponentPublicInstance, MeshInterface {}\n\nexport const MeshInjectionKey: InjectionKey<MeshPublicInterface> = Symbol('Mesh')\n\nconst Mesh = defineComponent({\n  name: 'Mesh',\n  extends: Object3D,\n  props: {\n    castShadow: Boolean,\n    receiveShadow: Boolean,\n  },\n  setup(): MeshSetupInterface {\n    return {}\n  },\n  provide() {\n    return {\n      [MeshInjectionKey as symbol]: this,\n    }\n  },\n  mounted() {\n    // TODO : proper ?\n    if (!this.mesh && !this.loading) this.initMesh()\n  },\n  methods: {\n    initMesh() {\n      const mesh = new TMesh(this.geometry, this.material)\n\n      bindProp(this, 'castShadow', mesh)\n      bindProp(this, 'receiveShadow', mesh)\n\n      this.mesh = mesh\n      this.initObject3D(mesh)\n    },\n    createGeometry() {},\n    addGeometryWatchers(props: Readonly<ComponentPropsOptions>) {\n      Object.keys(props).forEach(prop => {\n        // @ts-ignore\n        watch(() => this[prop], () => {\n          this.refreshGeometry()\n        })\n      })\n    },\n    setGeometry(geometry: BufferGeometry) {\n      this.geometry = geometry\n      if (this.mesh) this.mesh.geometry = geometry\n    },\n    setMaterial(material: Material | Material[]) {\n      if (Array.isArray(material) || !this.material) {\n        this.material = material\n        if (this.mesh) this.mesh.material = material\n      } else {\n        let prev = this.material\n        if (Array.isArray(prev)) {\n          prev.push(material)\n        } else {\n          prev = [prev, material]\n        }\n        this.material = prev\n        if (this.mesh) this.mesh.material = prev\n      }\n    },\n    refreshGeometry() {\n      const oldGeo = this.geometry\n      this.createGeometry()\n      if (this.mesh && this.geometry) this.mesh.geometry = this.geometry\n      oldGeo?.dispose()\n    },\n  },\n  unmounted() {\n    // for predefined mesh (geometry/material are not unmounted)\n    if (this.geometry) this.geometry.dispose()\n    if (this.material) {\n      if (Array.isArray(this.material)) {\n        for (const m of this.material) m.dispose()\n      } else {\n        this.material.dispose()\n      }\n    }\n  },\n  __hmrId: 'Mesh',\n})\n\nexport default Mesh\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function meshComponent<P extends Readonly<ComponentPropsOptions>>(\n  name: string,\n  props: P,\n  createGeometry: {(c: any): BufferGeometry}\n) {\n  return defineComponent({\n    name,\n    extends: Mesh,\n    props,\n    created() {\n      this.createGeometry()\n      this.addGeometryWatchers(props)\n    },\n    methods: {\n      createGeometry() {\n        this.geometry = createGeometry(this)\n      },\n    },\n  })\n}\n","import { ComponentPropsOptions, defineComponent, PropType, watch } from 'vue'\nimport { BufferAttribute, BufferGeometry } from 'three'\nimport { MeshInjectionKey, MeshInterface } from '../meshes/Mesh'\n\nexport interface GeometrySetupInterface {\n  mesh?: MeshInterface\n  geometry?: BufferGeometry\n  watchProps?: string[]\n}\n\nexport interface GeometryAttributeInterface {\n  name: string\n  array: ArrayLike<number>\n  itemSize: number\n  normalized?: boolean\n}\n\n// function defaultSetup(): GeometryInterface {\n//   const mesh = inject('mesh') as MeshInterface\n//   const watchProps: string[] = []\n//   return { mesh, watchProps }\n// }\n\nconst Geometry = defineComponent({\n  emits: ['created'],\n  props: {\n    rotateX: Number,\n    rotateY: Number,\n    rotateZ: Number,\n    attributes: { type: Array as PropType<Array<GeometryAttributeInterface>>, default: () => ([]) },\n  },\n  // inject for sub components\n  inject: {\n    mesh: MeshInjectionKey as symbol,\n  },\n  setup(): GeometrySetupInterface {\n    return {}\n  },\n  created() {\n    if (!this.mesh) {\n      console.error('Missing parent Mesh')\n      return\n    }\n\n    this.createGeometry()\n    this.rotateGeometry()\n    if (this.geometry) this.mesh.setGeometry(this.geometry)\n\n    Object.keys(this.$props).forEach(prop => {\n      // @ts-ignore\n      watch(() => this[prop], this.refreshGeometry)\n    })\n  },\n  unmounted() {\n    this.geometry?.dispose()\n  },\n  methods: {\n    createGeometry() {\n      const bufferAttributes: Record<string, unknown> = {}\n      const geometry = new BufferGeometry()\n      this.attributes.forEach(attribute => {\n        if (attribute.name && attribute.itemSize && attribute.array) {\n          const bufferAttribute = bufferAttributes[attribute.name] = new BufferAttribute(attribute.array, attribute.itemSize, attribute.normalized)\n          geometry.setAttribute(attribute.name, bufferAttribute)\n        }\n      })\n      geometry.computeBoundingBox()\n      geometry.userData.component = this\n      this.geometry = geometry\n      this.$emit('created', geometry)\n    },\n    rotateGeometry() {\n      if (!this.geometry) return\n      if (this.rotateX) this.geometry.rotateX(this.rotateX)\n      if (this.rotateY) this.geometry.rotateY(this.rotateY)\n      if (this.rotateZ) this.geometry.rotateZ(this.rotateZ)\n    },\n    refreshGeometry() {\n      const oldGeo = this.geometry\n      this.createGeometry()\n      this.rotateGeometry()\n      if (this.geometry && this.mesh) this.mesh.setGeometry(this.geometry)\n      oldGeo?.dispose()\n    },\n  },\n  render() { return [] },\n})\n\nexport default Geometry\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function geometryComponent<P extends Readonly<ComponentPropsOptions>>(\n  name: string,\n  props: P,\n  createGeometry: {(c: any): BufferGeometry}\n) {\n  return defineComponent({\n    name,\n    extends: Geometry,\n    props,\n    methods: {\n      createGeometry() {\n        this.geometry = createGeometry(this)\n        this.geometry.userData.component = this\n        this.$emit('created', this.geometry)\n      },\n    },\n  })\n}\n","import { geometryComponent } from './Geometry'\nimport { BoxGeometry } from 'three'\n\nexport const props = {\n  size: Number,\n  width: { type: Number, default: 1 },\n  height: { type: Number, default: 1 },\n  depth: { type: Number, default: 1 },\n  widthSegments: { type: Number, default: 1 },\n  heightSegments: { type: Number, default: 1 },\n  depthSegments: { type: Number, default: 1 },\n} as const\n\nexport function createGeometry(comp: any): BoxGeometry {\n  if (comp.size) {\n    return new BoxGeometry(comp.size, comp.size, comp.size, comp.widthSegments, comp.heightSegments, comp.depthSegments)\n  } else {\n    return new BoxGeometry(comp.width, comp.height, comp.depth, comp.widthSegments, comp.heightSegments, comp.depthSegments)\n  }\n}\n\nexport default geometryComponent('BoxGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { CircleGeometry } from 'three'\n\nexport const props = {\n  radius: { type: Number, default: 1 },\n  segments: { type: Number, default: 8 },\n  thetaStart: { type: Number, default: 0 },\n  thetaLength: { type: Number, default: Math.PI * 2 },\n} as const\n\nexport function createGeometry(comp: any): CircleGeometry {\n  return new CircleGeometry(comp.radius, comp.segments, comp.thetaStart, comp.thetaLength)\n}\n\nexport default geometryComponent('CircleGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { ConeGeometry } from 'three'\n\nexport const props = {\n  radius: { type: Number, default: 1 },\n  height: { type: Number, default: 1 },\n  radialSegments: { type: Number, default: 8 },\n  heightSegments: { type: Number, default: 1 },\n  openEnded: { type: Boolean, default: false },\n  thetaStart: { type: Number, default: 0 },\n  thetaLength: { type: Number, default: Math.PI * 2 },\n} as const\n\nexport function createGeometry(comp: any): ConeGeometry {\n  return new ConeGeometry(comp.radius, comp.height, comp.radialSegments, comp.heightSegments, comp.openEnded, comp.thetaStart, comp.thetaLength)\n}\n\nexport default geometryComponent('ConeGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { CylinderGeometry } from 'three'\n\nexport const props = {\n  radiusTop: { type: Number, default: 1 },\n  radiusBottom: { type: Number, default: 1 },\n  height: { type: Number, default: 1 },\n  radialSegments: { type: Number, default: 8 },\n  heightSegments: { type: Number, default: 1 },\n  openEnded: { type: Boolean, default: false },\n  thetaStart: { type: Number, default: 0 },\n  thetaLength: { type: Number, default: Math.PI * 2 },\n} as const\n\nexport function createGeometry(comp: any): CylinderGeometry {\n  return new CylinderGeometry(comp.radiusTop, comp.radiusBottom, comp.height, comp.radialSegments, comp.heightSegments, comp.openEnded, comp.thetaStart, comp.thetaLength)\n}\n\nexport default geometryComponent('CylinderGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { DodecahedronGeometry } from 'three'\n\nexport const props = {\n  radius: { type: Number, default: 1 },\n  detail: { type: Number, default: 0 },\n} as const\n\nexport function createGeometry(comp: any): DodecahedronGeometry {\n  return new DodecahedronGeometry(comp.radius, comp.detail)\n}\n\nexport default geometryComponent('DodecahedronGeometry', props, createGeometry)\n","import { PropType } from 'vue'\nimport { geometryComponent } from './Geometry'\nimport { ExtrudeGeometry, ExtrudeGeometryOptions, Shape } from 'three'\n\nexport const props = {\n  shapes: { type: [Object, Array] as PropType<Shape | Shape[]> },\n  options: { type: Object as PropType<ExtrudeGeometryOptions> },\n} as const\n\nexport function createGeometry(comp: any): ExtrudeGeometry {\n  return new ExtrudeGeometry(comp.shapes, comp.options)\n}\n\nexport default geometryComponent('ExtrudeGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { IcosahedronGeometry } from 'three'\n\nexport const props = {\n  radius: { type: Number, default: 1 },\n  detail: { type: Number, default: 0 },\n} as const\n\nexport function createGeometry(comp: any): IcosahedronGeometry {\n  return new IcosahedronGeometry(comp.radius, comp.detail)\n}\n\nexport default geometryComponent('IcosahedronGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { LatheGeometry } from 'three'\n\nexport const props = {\n  points: Array,\n  segments: { type: Number, default: 12 },\n  phiStart: { type: Number, default: 0 },\n  phiLength: { type: Number, default: Math.PI * 2 },\n} as const\n\nexport function createGeometry(comp: any): LatheGeometry {\n  return new LatheGeometry(comp.points, comp.segments, comp.phiStart, comp.phiLength)\n}\n\nexport default geometryComponent('LatheGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { OctahedronGeometry } from 'three'\n\nexport const props = {\n  radius: { type: Number, default: 1 },\n  detail: { type: Number, default: 0 },\n} as const\n\nexport function createGeometry(comp: any): OctahedronGeometry {\n  return new OctahedronGeometry(comp.radius, comp.detail)\n}\n\nexport default geometryComponent('OctahedronGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { PlaneGeometry } from 'three'\n\nexport const props = {\n  width: { type: Number, default: 1 },\n  height: { type: Number, default: 1 },\n  widthSegments: { type: Number, default: 1 },\n  heightSegments: { type: Number, default: 1 },\n} as const\n\nexport function createGeometry(comp: any): PlaneGeometry {\n  return new PlaneGeometry(comp.width, comp.height, comp.widthSegments, comp.heightSegments)\n}\n\nexport default geometryComponent('PlaneGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { PolyhedronGeometry } from 'three'\n\nexport const props = {\n  vertices: Array,\n  indices: Array,\n  radius: { type: Number, default: 1 },\n  detail: { type: Number, default: 0 },\n} as const\n\nexport function createGeometry(comp: any): PolyhedronGeometry {\n  return new PolyhedronGeometry(comp.vertices, comp.indices, comp.radius, comp.detail)\n}\n\nexport default geometryComponent('PolyhedronGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { RingGeometry } from 'three'\n\nexport const props = {\n  innerRadius: { type: Number, default: 0.5 },\n  outerRadius: { type: Number, default: 1 },\n  thetaSegments: { type: Number, default: 8 },\n  phiSegments: { type: Number, default: 1 },\n  thetaStart: { type: Number, default: 0 },\n  thetaLength: { type: Number, default: Math.PI * 2 },\n} as const\n\nexport function createGeometry(comp: any): RingGeometry {\n  return new RingGeometry(comp.innerRadius, comp.outerRadius, comp.thetaSegments, comp.phiSegments, comp.thetaStart, comp.thetaLength)\n}\n\nexport default geometryComponent('RingGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { SphereGeometry } from 'three'\n\nexport const props = {\n  radius: { type: Number, default: 1 },\n  widthSegments: { type: Number, default: 12 },\n  heightSegments: { type: Number, default: 12 },\n  phiStart: { type: Number, default: 0 },\n  phiLength: { type: Number, default: Math.PI * 2 },\n  thetaStart: { type: Number, default: 0 },\n  thetaLength: { type: Number, default: Math.PI },\n} as const\n\nexport function createGeometry(comp: any): SphereGeometry {\n  return new SphereGeometry(comp.radius, comp.widthSegments, comp.heightSegments, comp.phiStart, comp.phiLength, comp.thetaStart, comp.thetaLength)\n}\n\nexport default geometryComponent('SphereGeometry', props, createGeometry)\n","import { PropType } from 'vue'\nimport { geometryComponent } from './Geometry'\nimport { Shape, ShapeGeometry } from 'three'\n\nexport const props = {\n  shapes: { type: [Object, Array] as PropType<Shape | Shape[]> },\n  curveSegments: { type: Number },\n} as const\n\nexport function createGeometry(comp: any): ShapeGeometry {\n  return new ShapeGeometry(comp.shapes, comp.curveSegments)\n}\n\nexport default geometryComponent('ShapeGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { TetrahedronGeometry } from 'three'\n\nexport const props = {\n  radius: { type: Number, default: 1 },\n  detail: { type: Number, default: 0 },\n} as const\n\nexport function createGeometry(comp: any): TetrahedronGeometry {\n  return new TetrahedronGeometry(comp.radius, comp.detail)\n}\n\nexport default geometryComponent('TetrahedronGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { TorusGeometry } from 'three'\n\nexport const props = {\n  radius: { type: Number, default: 1 },\n  tube: { type: Number, default: 0.4 },\n  radialSegments: { type: Number, default: 8 },\n  tubularSegments: { type: Number, default: 6 },\n  arc: { type: Number, default: Math.PI * 2 },\n} as const\n\nexport function createGeometry(comp: any): TorusGeometry {\n  return new TorusGeometry(comp.radius, comp.tube, comp.radialSegments, comp.tubularSegments, comp.arc)\n}\n\nexport default geometryComponent('TorusGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { TorusKnotGeometry } from 'three'\n\nexport const props = {\n  radius: { type: Number, default: 1 },\n  tube: { type: Number, default: 0.4 },\n  tubularSegments: { type: Number, default: 64 },\n  radialSegments: { type: Number, default: 8 },\n  p: { type: Number, default: 2 },\n  q: { type: Number, default: 3 },\n} as const\n\nexport function createGeometry(comp: any): TorusKnotGeometry {\n  return new TorusKnotGeometry(comp.radius, comp.tube, comp.tubularSegments, comp.radialSegments, comp.p, comp.q)\n}\n\nexport default geometryComponent('TorusKnotGeometry', props, createGeometry)\n","import { defineComponent } from 'vue'\nimport { CatmullRomCurve3, Curve, TubeGeometry, Vector3 } from 'three'\nimport Geometry from './Geometry'\n\nexport const props = {\n  points: Array,\n  path: Curve,\n  tubularSegments: { type: Number, default: 64 },\n  radius: { type: Number, default: 1 },\n  radialSegments: { type: Number, default: 8 },\n  closed: { type: Boolean, default: false },\n} as const\n\nexport function createGeometry(comp: any): TubeGeometry {\n  let curve\n  if (comp.points) {\n    curve = new CatmullRomCurve3(comp.points)\n  } else if (comp.path) {\n    curve = comp.path\n  } else {\n    console.error('Missing path curve or points.')\n  }\n  return new TubeGeometry(curve, comp.tubularSegments, comp.radius, comp.radiusSegments, comp.closed)\n}\n\nexport default defineComponent({\n  extends: Geometry,\n  props,\n  methods: {\n    createGeometry() {\n      this.geometry = createGeometry(this)\n    },\n    // update points (without using prop, faster)\n    updatePoints(points: Vector3[]) {\n      updateTubeGeometryPoints(this.geometry as TubeGeometry, points)\n    },\n  },\n})\n\nexport function updateTubeGeometryPoints(tube: TubeGeometry, points: Vector3[]): void {\n  const curve = new CatmullRomCurve3(points)\n  const { radialSegments, radius, tubularSegments, closed } = tube.parameters\n  const frames = curve.computeFrenetFrames(tubularSegments, closed)\n  tube.tangents = frames.tangents\n  tube.normals = frames.normals\n  tube.binormals = frames.binormals\n  tube.parameters.path = curve\n\n  const pAttribute = tube.getAttribute('position')\n  const nAttribute = tube.getAttribute('normal')\n\n  const normal = new Vector3()\n  const P = new Vector3()\n\n  for (let i = 0; i < tubularSegments; i++) {\n    updateSegment(i)\n  }\n  updateSegment(tubularSegments)\n\n  tube.attributes.position.needsUpdate = true\n  tube.attributes.normal.needsUpdate = true\n\n  function updateSegment(i: number) {\n    curve.getPointAt(i / tubularSegments, P)\n    const N = frames.normals[i]\n    const B = frames.binormals[i]\n    for (let j = 0; j <= radialSegments; j++) {\n      const v = j / radialSegments * Math.PI * 2\n      const sin = Math.sin(v)\n      const cos = -Math.cos(v)\n      normal.x = (cos * N.x + sin * B.x)\n      normal.y = (cos * N.y + sin * B.y)\n      normal.z = (cos * N.z + sin * B.z)\n      normal.normalize()\n      const index = (i * (radialSegments + 1) + j)\n      nAttribute.setXYZ(index, normal.x, normal.y, normal.z)\n      pAttribute.setXYZ(index, P.x + radius * normal.x, P.y + radius * normal.y, P.z + radius * normal.z)\n    }\n  }\n}\n","import { DirectionalLight, Light, SpotLight } from 'three'\nimport { defineComponent, PropType, watch } from 'vue'\nimport Object3D, { Vector2PropInterface } from '../core/Object3D'\nimport { bindProp, setFromProp } from '../tools'\n\nexport interface LightSetupInterface {\n  light?: Light\n}\n\nexport default defineComponent({\n  extends: Object3D,\n  name: 'Light',\n  props: {\n    color: { type: String, default: '#ffffff' },\n    intensity: { type: Number, default: 1 },\n    castShadow: { type: Boolean, default: false },\n    shadowMapSize: { type: Object as PropType<Vector2PropInterface>, default: () => ({ x: 512, y: 512 }) },\n    shadowCamera: { type: Object, default: () => ({}) },\n  },\n  setup(): LightSetupInterface {\n    return {}\n  },\n  unmounted() {\n    if (this.light instanceof SpotLight || this.light instanceof DirectionalLight) {\n      this.removeFromParent(this.light.target)\n    }\n  },\n  methods: {\n    initLight(light: Light) {\n      this.light = light\n\n      if ((light as any).shadow) {\n        light.castShadow = this.castShadow\n        // @ts-ignore\n        setFromProp(light.shadow.mapSize, this.shadowMapSize)\n        // @ts-ignore\n        setFromProp(light.shadow.camera, this.shadowCamera)\n      }\n\n      ['color', 'intensity', 'castShadow'].forEach(p => {\n        // @ts-ignore\n        watch(() => this[p], (value) => {\n          if (p === 'color') {\n            light.color.set(value)\n          } else {\n            // @ts-ignore\n            light[p] = value\n          }\n        })\n      })\n\n      this.initObject3D(light)\n\n      if (light instanceof SpotLight || light instanceof DirectionalLight) {\n        bindProp(this, 'target', light.target, 'position')\n        this.addToParent(light.target)\n      }\n    },\n  },\n  __hmrId: 'Light',\n})\n","import { defineComponent } from 'vue'\nimport { AmbientLight } from 'three'\nimport Light from './Light'\n\nexport default defineComponent({\n  extends: Light,\n  created() {\n    this.initLight(new AmbientLight(this.color, this.intensity))\n  },\n  __hmrId: 'AmbientLight',\n})\n","import { defineComponent, PropType } from 'vue'\nimport { DirectionalLight } from 'three'\nimport { Vector3PropInterface } from '../core/Object3D'\nimport Light from './Light'\n\nexport default defineComponent({\n  extends: Light,\n  props: {\n    target: { type: Object as PropType<Vector3PropInterface>, default: () => ({ x: 0, y: 0, z: 0 }) },\n  },\n  created() {\n    this.initLight(new DirectionalLight(this.color, this.intensity))\n  },\n  __hmrId: 'DirectionalLight',\n})\n","import { defineComponent, watch } from 'vue'\nimport { HemisphereLight } from 'three'\nimport Light from './Light'\n\nexport default defineComponent({\n  extends: Light,\n  props: {\n    groundColor: { type: String, default: '#444444' },\n  },\n  created() {\n    const light = new HemisphereLight(this.color, this.groundColor, this.intensity)\n    watch(() => this.groundColor, (value) => { light.groundColor.set(value) })\n    this.initLight(light)\n  },\n  __hmrId: 'HemisphereLight',\n})\n","import { defineComponent } from 'vue'\nimport { PointLight } from 'three'\nimport Light from './Light'\n\nexport default defineComponent({\n  extends: Light,\n  props: {\n    distance: { type: Number, default: 0 },\n    decay: { type: Number, default: 1 },\n  },\n  created() {\n    this.initLight(new PointLight(this.color, this.intensity, this.distance, this.decay))\n  },\n  __hmrId: 'PointLight',\n})\n","import { defineComponent, watch } from 'vue'\nimport { RectAreaLight } from 'three'\nimport { RectAreaLightUniformsLib } from 'three/examples/jsm/lights/RectAreaLightUniformsLib.js'\nimport { RectAreaLightHelper } from 'three/examples/jsm/helpers/RectAreaLightHelper.js'\nimport Light from './Light'\n\nexport default defineComponent({\n  extends: Light,\n  props: {\n    width: { type: Number, default: 10 },\n    height: { type: Number, default: 10 },\n    helper: Boolean,\n  },\n  created() {\n    RectAreaLightUniformsLib.init()\n    const light = new RectAreaLight(this.color, this.intensity, this.width, this.height)\n\n    const watchProps = ['width', 'height']\n    watchProps.forEach(p => {\n      // @ts-ignore\n      watch(() => this[p], (value) => { light[p] = value })\n    })\n\n    if (this.helper) {\n      const lightHelper = new RectAreaLightHelper(light)\n      light.add(lightHelper)\n    }\n\n    this.initLight(light)\n  },\n  __hmrId: 'RectAreaLight',\n})\n","import { defineComponent, watch } from 'vue'\nimport { SpotLight } from 'three'\nimport Light from './Light'\n\nexport default defineComponent({\n  extends: Light,\n  props: {\n    angle: { type: Number, default: Math.PI / 3 },\n    decay: { type: Number, default: 1 },\n    distance: { type: Number, default: 0 },\n    penumbra: { type: Number, default: 0 },\n    target: Object,\n  },\n  created() {\n    const light = new SpotLight(this.color, this.intensity, this.distance, this.angle, this.penumbra, this.decay)\n\n    const watchProps = ['angle', 'decay', 'distance', 'penumbra']\n    watchProps.forEach(p => {\n      // @ts-ignore\n      watch(() => this[p], (value) => { light[p] = value })\n    })\n\n    this.initLight(light)\n  },\n  __hmrId: 'SpotLight',\n})\n","import { ComponentPropsOptions, ComponentPublicInstance, defineComponent, InjectionKey, PropType, watch } from 'vue'\nimport { Color, Material, MeshBasicMaterial, MeshLambertMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, PointsMaterial as TPointsMaterial, Texture, ShadowMaterial as TShadowMaterial } from 'three'\nimport { MeshInjectionKey, MeshInterface } from '../meshes/Mesh'\nimport { bindObjectProp, propsValues } from '../tools'\nimport { BasicMaterialPropsInterface, LambertMaterialPropsInterface, MaterialPropsInterface, PhongMaterialPropsInterface, PhysicalMaterialPropsInterface, PointsMaterialPropsInterface, StandardMaterialPropsInterface, ToonMaterialPropsInterface } from './types'\n\nexport interface MaterialSetupInterface {\n  mesh?: MeshInterface\n  material?: Material\n  createMaterial?(): Material\n}\n\nexport interface MaterialInterface extends MaterialSetupInterface {\n  setTexture(texture: Texture | null, key: string): void\n}\n\nexport interface MaterialPublicInterface extends ComponentPublicInstance, MaterialInterface {}\n\nexport const MaterialInjectionKey: InjectionKey<MaterialPublicInterface> = Symbol('Material')\n\nconst BaseMaterial = defineComponent({\n  emits: ['created'],\n  props: {\n    color: { type: String, default: '#ffffff' },\n    props: { type: Object as PropType<MaterialPropsInterface>, default: () => ({}) },\n  },\n  inject: {\n    mesh: MeshInjectionKey as symbol,\n  },\n  setup(): MaterialSetupInterface {\n    return {}\n  },\n  provide() {\n    return {\n      [MaterialInjectionKey as symbol]: this,\n    }\n  },\n  created() {\n    if (!this.mesh) {\n      console.error('Missing parent Mesh')\n      return\n    }\n\n    if (this.createMaterial) {\n      const material = this.material = this.createMaterial()\n      // @ts-ignore\n      watch(() => this.color, (value) => { material.color.set(value) })\n      bindObjectProp(this, 'props', material, false, this.setProp)\n      this.$emit('created', material)\n      this.mesh.setMaterial(material)\n    }\n  },\n  unmounted() {\n    this.material?.dispose()\n  },\n  methods: {\n    getMaterialParams() {\n      return { ...propsValues(this.$props, ['props']), ...this.props }\n    },\n    setProp(material: any, key: string, value: any, needsUpdate = false) {\n      const dstVal = material[key]\n      if (dstVal instanceof Color) dstVal.set(value)\n      else material[key] = value\n      material.needsUpdate = needsUpdate\n    },\n    setTexture(texture: Texture | null, key = 'map') {\n      this.setProp(this.material, key, texture, true)\n    },\n  },\n  render() {\n    return this.$slots.default ? this.$slots.default() : []\n  },\n  __hmrId: 'Material',\n})\n\nexport default BaseMaterial\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function materialComponent<P extends Readonly<ComponentPropsOptions>>(\n  name: string,\n  props: P,\n  createMaterial: {(opts: any): Material}\n) {\n  return defineComponent({\n    name,\n    extends: BaseMaterial,\n    props,\n    methods: {\n      createMaterial() {\n        return createMaterial(this.getMaterialParams())\n      },\n    },\n  })\n}\n\n// TODO : proper\nexport const BasicMaterial = materialComponent('BasicMaterial', { props: { type: Object as PropType<BasicMaterialPropsInterface>, default: () => ({}) } }, (opts) => new MeshBasicMaterial(opts))\nexport const LambertMaterial = materialComponent('LambertMaterial', { props: { type: Object as PropType<LambertMaterialPropsInterface>, default: () => ({}) } }, (opts) => new MeshLambertMaterial(opts))\nexport const PhongMaterial = materialComponent('PhongMaterial', { props: { type: Object as PropType<PhongMaterialPropsInterface>, default: () => ({}) } }, (opts) => new MeshPhongMaterial(opts))\nexport const PhysicalMaterial = materialComponent('PhysicalMaterial', { props: { type: Object as PropType<PhysicalMaterialPropsInterface>, default: () => ({}) } }, (opts) => new MeshPhysicalMaterial(opts))\nexport const PointsMaterial = materialComponent('PointsMaterial', { props: { type: Object as PropType<PointsMaterialPropsInterface>, default: () => ({}) } }, (opts) => new TPointsMaterial(opts))\nexport const ShadowMaterial = materialComponent('ShadowMaterial', { color: { type: String, default: '#000000' }, props: { type: Object as PropType<MaterialPropsInterface>, default: () => ({}) } }, (opts) => new TShadowMaterial(opts))\nexport const StandardMaterial = materialComponent('StandardMaterial', { props: { type: Object as PropType<StandardMaterialPropsInterface>, default: () => ({}) } }, (opts) => new MeshStandardMaterial(opts))\nexport const ToonMaterial = materialComponent('ToonMaterial', { props: { type: Object as PropType<ToonMaterialPropsInterface>, default: () => ({}) } }, (opts) => new MeshToonMaterial(opts))\n","import { MeshMatcapMaterial, TextureLoader } from 'three'\nimport { propsValues, getMatcapUrl } from '../tools'\nimport { materialComponent } from './Material'\n\nexport default materialComponent(\n  'MatcapMaterial',\n  {\n    src: String,\n    name: { type: String, default: '0404E8_0404B5_0404CB_3333FC' },\n  },\n  (opts) => {\n    const src = opts.src ? opts.src : getMatcapUrl(opts.name)\n    const params = propsValues(opts, ['src', 'name'])\n    params.matcap = new TextureLoader().load(src)\n    return new MeshMatcapMaterial(params)\n  }\n)\n","import { ShaderMaterial } from 'three'\nimport { materialComponent } from './Material'\nimport { propsValues } from '../tools'\n\nconst defaultVertexShader = `\n  varying vec2 vUv;\n  void main(){\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n  }\n`\n\nconst defaultFragmentShader = `\n  varying vec2 vUv;\n  void main() {\n    gl_FragColor = vec4(vUv.x, vUv.y, 0., 1.0);\n  }\n`\n\nexport default materialComponent(\n  'ShaderMaterial',\n  {\n    props: { type: Object, default: () => ({\n      uniforms: {},\n      vertexShader: defaultVertexShader,\n      fragmentShader: defaultFragmentShader,\n    }) },\n  },\n  (opts) => new ShaderMaterial(propsValues(opts, ['color']))\n)\n","/**\n * ------------------------------------------------------------------------------------------\n * Subsurface Scattering shader\n * Based on three/examples/jsm/shaders/SubsurfaceScatteringShader.js\n * Based on GDC 2011 – Approximating Translucency for a Fast, Cheap and Convincing Subsurface Scattering Look\n * https://colinbarrebrisebois.com/2011/03/07/gdc-2011-approximating-translucency-for-a-fast-cheap-and-convincing-subsurface-scattering-look/\n *------------------------------------------------------------------------------------------\n */\nimport {\n  Color,\n  ShaderChunk,\n  ShaderLib,\n  UniformsUtils,\n} from 'three'\n\nfunction replaceAll(string: string, find: string, replace: string) {\n  return string.split(find).join(replace)\n}\n\nconst meshphongFragHead = ShaderChunk.meshphong_frag.slice(0, ShaderChunk.meshphong_frag.indexOf('void main() {'))\nconst meshphongFragBody = ShaderChunk.meshphong_frag.slice(ShaderChunk.meshphong_frag.indexOf('void main() {'))\n\nconst SubsurfaceScatteringShader = {\n\n  uniforms: UniformsUtils.merge([\n    ShaderLib.phong.uniforms,\n    {\n      thicknessColor: { value: new Color(0xffffff) },\n      thicknessDistortion: { value: 0.1 },\n      thicknessAmbient: { value: 0.0 },\n      thicknessAttenuation: { value: 0.1 },\n      thicknessPower: { value: 2.0 },\n      thicknessScale: { value: 10.0 },\n    },\n  ]),\n\n  vertexShader: `\n    #define USE_UV\n    ${ShaderChunk.meshphong_vert}\n  `,\n\n  fragmentShader: `\n    #define USE_UV\n    #define SUBSURFACE\n\n    ${meshphongFragHead}\n\n    uniform float thicknessPower;\n    uniform float thicknessScale;\n    uniform float thicknessDistortion;\n    uniform float thicknessAmbient;\n    uniform float thicknessAttenuation;\n    uniform vec3 thicknessColor;\n\n    void RE_Direct_Scattering(const in IncidentLight directLight, const in vec2 uv, const in GeometricContext geometry, inout ReflectedLight reflectedLight) {\n      #ifdef USE_COLOR\n        vec3 thickness = vColor * thicknessColor;\n      #else\n        vec3 thickness = thicknessColor;\n      #endif\n      vec3 scatteringHalf = normalize(directLight.direction + (geometry.normal * thicknessDistortion));\n      float scatteringDot = pow(saturate(dot(geometry.viewDir, -scatteringHalf)), thicknessPower) * thicknessScale;\n      vec3 scatteringIllu = (scatteringDot + thicknessAmbient) * thickness;\n      reflectedLight.directDiffuse += scatteringIllu * thicknessAttenuation * directLight.color;\n    }\n  ` + meshphongFragBody.replace(\n    '#include <lights_fragment_begin>',\n    replaceAll(\n      ShaderChunk.lights_fragment_begin,\n      'RE_Direct( directLight, geometry, material, reflectedLight );',\n      `\n        RE_Direct( directLight, geometry, material, reflectedLight );\n        #if defined( SUBSURFACE ) && defined( USE_UV )\n          RE_Direct_Scattering(directLight, vUv, geometry, reflectedLight);\n        #endif\n      `\n    )\n  ),\n}\n\nexport default SubsurfaceScatteringShader\n","import { defineComponent, PropType } from 'vue'\nimport { Color, ShaderMaterial, UniformsUtils } from 'three'\nimport SubsurfaceScatteringShader from './SubsurfaceScatteringShader'\nimport Material from './Material'\nimport { bindObjectProp } from '../tools'\n\nexport interface SubSurfaceMaterialUniformsInterface {\n  diffuse?: string | number\n  thicknessColor?: string | number\n  thicknessDistortion?: number\n  thicknessAmbient?: number\n  thicknessAttenuation?: number\n  thicknessPower?: number\n  thicknessScale?: number\n}\n\nexport default defineComponent({\n  extends: Material,\n  props: {\n    uniforms: { type: Object as PropType<SubSurfaceMaterialUniformsInterface>, default: () => ({\n      diffuse: '#ffffff',\n      thicknessColor: '#ffffff',\n      thicknessDistortion: 0.4,\n      thicknessAmbient: 0.01,\n      thicknessAttenuation: 0.7,\n      thicknessPower: 2,\n      thicknessScale: 4,\n    }) },\n  },\n  methods: {\n    createMaterial() {\n      const params = SubsurfaceScatteringShader\n      const uniforms = UniformsUtils.clone(params.uniforms)\n\n      bindObjectProp(this, 'uniforms', uniforms, true, (dst: any, key: string, value: any) => {\n        const dstVal = dst[key].value\n        if (dstVal instanceof Color) dstVal.set(value)\n        else dst[key].value = value\n      })\n\n      const material = new ShaderMaterial({\n        ...params,\n        lights: true,\n        ...this.props,\n        uniforms,\n      })\n\n      return material\n    },\n  },\n})\n","import { defineComponent, PropType, watch } from 'vue'\nimport { ShaderMaterial, Texture, TextureLoader } from 'three'\nimport { bindObjectProp } from '../tools'\nimport { MaterialInjectionKey, MaterialInterface } from './Material'\n\nexport interface TexureInterface {\n  material?: MaterialInterface\n  texture?: Texture\n}\n\nexport default defineComponent({\n  inject: {\n    material: MaterialInjectionKey as symbol,\n  },\n  props: {\n    name: { type: String, default: 'map' },\n    uniform: String,\n    src: String,\n    onLoad: Function as PropType<(t: Texture) => void>,\n    onProgress: Function as PropType<(e: ProgressEvent) => void>,\n    onError: Function as PropType<(e: ErrorEvent) => void>,\n    props: { type: Object, default: () => ({}) },\n  },\n  setup(): TexureInterface {\n    return {}\n  },\n  created() {\n    this.refreshTexture()\n    watch(() => this.src, this.refreshTexture)\n  },\n  unmounted() {\n    this.material?.setTexture(null, this.name)\n    this.texture?.dispose()\n  },\n  methods: {\n    createTexture() {\n      if (!this.src) return undefined\n      return new TextureLoader().load(this.src, this.onLoaded, this.onProgress, this.onError)\n    },\n    initTexture() {\n      if (!this.texture) return\n\n      bindObjectProp(this, 'props', this.texture)\n      if (!this.material) return\n\n      this.material.setTexture(this.texture, this.name)\n      if (this.material.material instanceof ShaderMaterial && this.uniform) {\n        (this.material.material).uniforms[this.uniform] = { value: this.texture }\n      }\n    },\n    refreshTexture() {\n      this.texture?.dispose()\n      this.texture = this.createTexture()\n      this.initTexture()\n    },\n    onLoaded(t: Texture) {\n      this.onLoad?.(t)\n    },\n  },\n  render() { return [] },\n})\n","import { defineComponent, PropType, watch } from 'vue'\nimport { CubeReflectionMapping, CubeTextureLoader } from 'three'\nimport Texture from './Texture'\n\nexport default defineComponent({\n  extends: Texture,\n  props: {\n    name: { type: String, default: 'envMap' },\n    path: { type: String, required: true },\n    urls: {\n      type: Array as PropType<string[]>,\n      default: () => ['px.jpg', 'nx.jpg', 'py.jpg', 'ny.jpg', 'pz.jpg', 'nz.jpg'],\n    },\n    props: { type: Object, default: () => ({ mapping: CubeReflectionMapping }) },\n  },\n  created() {\n    watch(() => this.path, this.refreshTexture)\n    watch(() => this.urls, this.refreshTexture)\n  },\n  methods: {\n    createTexture() {\n      return new CubeTextureLoader()\n        .setPath(this.path)\n        .load(this.urls, this.onLoaded, this.onProgress, this.onError)\n    },\n  },\n})\n","import { defineComponent, watch } from 'vue'\nimport { VideoTexture } from 'three'\nimport Texture from './Texture'\n\nexport default defineComponent({\n  extends: Texture,\n  props: {\n    videoId: {\n      type: String,\n      required: true,\n    },\n  },\n  created() {\n    watch(() => this.videoId, this.refreshTexture)\n  },\n  methods: {\n    createTexture() {\n      const video = document.getElementById(this.videoId) as HTMLVideoElement\n      return new VideoTexture(video)\n    },\n  },\n})\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/BoxGeometry'\n\nexport default meshComponent('Box', props, createGeometry)\n\n// import { defineComponent } from 'vue'\n// import Mesh, { meshComponent } from './Mesh'\n//\n// export default defineComponent({\n//   extends: Mesh,\n//   props,\n//   created() {\n//     this.createGeometry()\n//     this.addGeometryWatchers(props)\n//   },\n//   methods: {\n//     createGeometry() {\n//       this.geometry = createGeometry(this)\n//     },\n//   },\n// })\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/CircleGeometry'\n\nexport default meshComponent('Circle', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/ConeGeometry'\n\nexport default meshComponent('Cone', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/CylinderGeometry'\n\nexport default meshComponent('Cylinder', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/DodecahedronGeometry'\n\nexport default meshComponent('Dodecahedron', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/IcosahedronGeometry'\n\nexport default meshComponent('Icosahedron', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/LatheGeometry'\n\nexport default meshComponent('Lathe', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/OctahedronGeometry'\n\nexport default meshComponent('Octahedron', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/PlaneGeometry'\n\nexport default meshComponent('Plane', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/PolyhedronGeometry'\n\nexport default meshComponent('Polyhedron', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/RingGeometry'\n\nexport default meshComponent('Ring', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/SphereGeometry'\n\nexport default meshComponent('Sphere', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/TetrahedronGeometry'\n\nexport default meshComponent('Tetrahedron', props, createGeometry)\n","import { defineComponent, PropType, watch } from 'vue'\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry.js'\nimport { Font, FontLoader } from 'three/examples/jsm/loaders/FontLoader.js'\nimport Mesh, { MeshSetupInterface } from './Mesh'\n\ninterface TextSetupInterface extends MeshSetupInterface {\n  geometry?: TextGeometry\n  font?: Font\n}\n\nconst props = {\n  text: { type: String, required: true, default: 'Text' },\n  fontSrc: { type: String, required: true },\n  size: { type: Number, default: 80 },\n  height: { type: Number, default: 5 },\n  depth: { type: Number, default: 1 },\n  curveSegments: { type: Number, default: 12 },\n  bevelEnabled: { type: Boolean, default: false },\n  bevelThickness: { type: Number, default: 10 },\n  bevelSize: { type: Number, default: 8 },\n  bevelOffset: { type: Number, default: 0 },\n  bevelSegments: { type: Number, default: 5 },\n  align: { type: [Boolean, String] as PropType<boolean | string>, default: false },\n} as const\n\nexport default defineComponent({\n  extends: Mesh,\n  props,\n  setup(): TextSetupInterface {\n    return {}\n  },\n  created() {\n    if (!this.fontSrc) {\n      console.error('Missing required prop: \"font-src\"')\n      return\n    }\n    // if (!this.text) {\n    //   console.error('Missing required prop: \"text\"')\n    //   return\n    // }\n\n    // add watchers\n    const watchProps = [\n      'text', 'size', 'height', 'curveSegments',\n      'bevelEnabled', 'bevelThickness', 'bevelSize', 'bevelOffset', 'bevelSegments',\n      'align',\n    ]\n    watchProps.forEach(p => {\n      // @ts-ignore\n      watch(() => this[p], () => {\n        if (this.font) this.refreshGeometry()\n      })\n    })\n\n    const loader = new FontLoader()\n    this.loading = true\n    loader.load(this.fontSrc, (font) => {\n      this.loading = false\n      this.font = font\n      this.createGeometry()\n      this.initMesh()\n    })\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new TextGeometry(this.text, {\n        // @ts-ignore\n        font: this.font,\n        size: this.size,\n        height: this.height,\n        depth: this.depth,\n        curveSegments: this.curveSegments,\n        bevelEnabled: this.bevelEnabled,\n        bevelThickness: this.bevelThickness,\n        bevelSize: this.bevelSize,\n        bevelOffset: this.bevelOffset,\n        bevelSegments: this.bevelSegments,\n      })\n\n      if (this.align === 'center') {\n        this.geometry.center()\n      }\n    },\n  },\n})\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/TorusGeometry'\n\nexport default meshComponent('Torus', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/TorusKnotGeometry'\n\nexport default meshComponent('TorusKnot', props, createGeometry)\n","import { defineComponent } from 'vue'\nimport { TubeGeometry, Vector3 } from 'three'\nimport Mesh from './Mesh'\nimport { props, createGeometry, updateTubeGeometryPoints } from '../geometries/TubeGeometry'\n\nexport default defineComponent({\n  extends: Mesh,\n  props,\n  created() {\n    this.createGeometry()\n    this.addGeometryWatchers(props)\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = createGeometry(this)\n    },\n    // update curve points (without using prop, faster)\n    updatePoints(points: Vector3[]) {\n      updateTubeGeometryPoints(this.geometry as TubeGeometry, points)\n    },\n  },\n  __hmrId: 'Tube',\n})\n","import { defineComponent, watch } from 'vue'\nimport { DoubleSide, MeshBasicMaterial, PlaneGeometry, Texture, TextureLoader } from 'three'\nimport Mesh, { MeshSetupInterface } from './Mesh'\n\ninterface ImageSetupInterface extends MeshSetupInterface {\n  material?: MeshBasicMaterial\n  texture?: Texture\n}\n\nexport default defineComponent({\n  emits: ['loaded'],\n  extends: Mesh,\n  props: {\n    src: { type: String, required: true },\n    width: Number,\n    height: Number,\n    widthSegments: { type: Number, default: 1 },\n    heightSegments: { type: Number, default: 1 },\n    keepSize: Boolean,\n  },\n  setup(): ImageSetupInterface {\n    return {}\n  },\n  created() {\n    if (!this.renderer) return\n\n    this.geometry = new PlaneGeometry(1, 1, this.widthSegments, this.heightSegments)\n    this.material = new MeshBasicMaterial({ side: DoubleSide, map: this.loadTexture() })\n\n    watch(() => this.src, this.refreshTexture);\n\n    ['width', 'height'].forEach(p => {\n      // @ts-ignore\n      watch(() => this[p], this.resize)\n    })\n\n    this.resize()\n    if (this.keepSize) this.renderer.onResize(this.resize)\n  },\n  unmounted() {\n    this.renderer?.offResize(this.resize)\n  },\n  methods: {\n    loadTexture() {\n      return new TextureLoader().load(this.src, this.onLoaded)\n    },\n    refreshTexture() {\n      this.texture?.dispose()\n      if (this.material) {\n        this.material.map = this.loadTexture()\n        this.material.needsUpdate = true\n      }\n    },\n    onLoaded(texture: Texture) {\n      this.texture = texture\n      this.resize()\n      this.$emit('loaded', texture)\n    },\n    resize() {\n      if (!this.renderer || !this.texture) return\n      const screen = this.renderer.size\n      const iW = this.texture.image.width\n      const iH = this.texture.image.height\n      const iRatio = iW / iH\n      let w = 1, h = 1\n      if (this.width && this.height) {\n        w = this.width * screen.wWidth / screen.width\n        h = this.height * screen.wHeight / screen.height\n      } else if (this.width) {\n        w = this.width * screen.wWidth / screen.width\n        h = w / iRatio\n      } else if (this.height) {\n        h = this.height * screen.wHeight / screen.height\n        w = h * iRatio\n      } else {\n        if (iRatio > 1) w = h * iRatio\n        else h = w / iRatio\n      }\n      if (this.mesh) {\n        this.mesh.scale.x = w\n        this.mesh.scale.y = h\n      }\n    },\n  },\n  __hmrId: 'Image',\n})\n","import { defineComponent } from 'vue'\nimport { InstancedMesh } from 'three'\nimport Mesh from './Mesh'\nimport { bindProp } from '../tools'\n\nexport default defineComponent({\n  extends: Mesh,\n  props: {\n    count: { type: Number, required: true },\n  },\n  methods: {\n    initMesh() {\n      if (!this.renderer) return\n\n      if (!this.geometry || !this.material) {\n        console.error('Missing geometry and/or material')\n        return false\n      }\n\n      this.mesh = new InstancedMesh(this.geometry, this.material, this.count)\n      this.mesh.userData.component = this\n\n      bindProp(this, 'castShadow', this.mesh)\n      bindProp(this, 'receiveShadow', this.mesh)\n\n      if (this.onPointerEnter ||\n        this.onPointerOver ||\n        this.onPointerMove ||\n        this.onPointerLeave ||\n        this.onPointerDown ||\n        this.onPointerUp ||\n        this.onClick) {\n        this.renderer.three.addIntersectObject(this.mesh)\n      }\n\n      this.initObject3D(this.mesh)\n    },\n  },\n  __hmrId: 'InstancedMesh',\n})\n","import { defineComponent } from 'vue'\nimport { Sprite, SpriteMaterial, Texture, TextureLoader } from 'three'\nimport Object3D, { Object3DSetupInterface } from '../core/Object3D'\n\ninterface SpriteSetupInterface extends Object3DSetupInterface {\n  texture?: Texture\n  material?: SpriteMaterial\n  sprite?: Sprite\n}\n\nexport default defineComponent({\n  extends: Object3D,\n  emits: ['loaded'],\n  props: {\n    src: { type: String, required: true },\n  },\n  setup(): SpriteSetupInterface {\n    return {}\n  },\n  created() {\n    this.texture = new TextureLoader().load(this.src, this.onLoaded)\n    this.material = new SpriteMaterial({ map: this.texture })\n    this.sprite = new Sprite(this.material)\n    this.initObject3D(this.sprite)\n  },\n  unmounted() {\n    this.texture?.dispose()\n    this.material?.dispose()\n  },\n  methods: {\n    onLoaded() {\n      this.updateUV()\n      this.$emit('loaded')\n    },\n    updateUV() {\n      if (!this.texture || !this.sprite) return\n\n      const iWidth = this.texture.image.width\n      const iHeight = this.texture.image.height\n      const iRatio = iWidth / iHeight\n\n      let x = 0.5, y = 0.5\n      if (iRatio > 1) {\n        x = 0.5 * iRatio\n      } else {\n        y = 0.5 / iRatio\n      }\n\n      const positions = this.sprite.geometry.attributes.position.array as Array<number>\n      positions[0] = -x; positions[1] = -y\n      positions[5] = x; positions[6] = -y\n      positions[10] = x; positions[11] = y\n      positions[15] = -x; positions[16] = y\n      this.sprite.geometry.attributes.position.needsUpdate = true\n    },\n  },\n  __hmrId: 'Sprite',\n})\n","import { defineComponent } from 'vue'\nimport { BufferGeometry, Material, Points } from 'three'\nimport Object3D, { Object3DSetupInterface } from '../core/Object3D'\nimport { MeshInjectionKey } from './Mesh'\n\nexport interface PointsSetupInterface extends Object3DSetupInterface {\n  mesh?: Points\n  points?: Points\n  geometry?: BufferGeometry\n  material?: Material\n}\n\nexport interface PointsInterface extends PointsSetupInterface {\n  setGeometry(geometry: BufferGeometry): void\n  setMaterial(material: Material): void\n}\n\n// not really a mesh, but allow us to easily get geometry/material support\nexport default defineComponent({\n  extends: Object3D,\n  setup(): PointsSetupInterface {\n    return {}\n  },\n  provide() {\n    return {\n      [MeshInjectionKey as symbol]: this,\n    }\n  },\n  mounted() {\n    this.mesh = this.points = new Points(this.geometry, this.material)\n    this.initObject3D(this.mesh)\n  },\n  methods: {\n    setGeometry(geometry: BufferGeometry) {\n      this.geometry = geometry\n      if (this.mesh) this.mesh.geometry = geometry\n    },\n    setMaterial(material: Material) {\n      this.material = material\n      if (this.mesh) this.mesh.material = material\n    },\n  },\n})\n","import { Object3D as TObject3D } from 'three'\nimport { defineComponent } from 'vue'\nimport Object3D from '../core/Object3D'\n\nexport default defineComponent({\n  extends: Object3D,\n  emits: ['before-load', 'load', 'progress', 'error'],\n  props: {\n    src: { type: String, required: true },\n  },\n  data() {\n    return {\n      progress: 0,\n    }\n  },\n  methods: {\n    onLoad(model: TObject3D) {\n      this.$emit('load', model)\n    },\n    onProgress(progress: ProgressEvent) {\n      this.progress = progress.loaded / progress.total\n      this.$emit('progress', progress)\n    },\n    onError(error: ErrorEvent) {\n      this.$emit('error', error)\n    },\n  },\n})\n","import { defineComponent } from 'vue'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\nimport Model from './Model'\n\nexport default defineComponent({\n  extends: Model,\n  created() {\n    const loader = new GLTFLoader()\n    this.$emit('before-load', loader)\n    loader.load(this.src, (gltf) => {\n      this.onLoad(gltf)\n      this.initObject3D(gltf.scene)\n    }, this.onProgress, this.onError)\n  },\n})\n","import { defineComponent } from 'vue'\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader.js'\nimport Model from './Model'\n\nexport default defineComponent({\n  extends: Model,\n  created() {\n    const loader = new FBXLoader()\n    this.$emit('before-load', loader)\n    loader.load(this.src, (fbx) => {\n      this.onLoad(fbx)\n      this.initObject3D(fbx)\n    }, this.onProgress, this.onError)\n  },\n})\n","import { defineComponent, inject, InjectionKey } from 'vue'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\nimport { Pass } from 'three/examples/jsm/postprocessing/Pass'\nimport { RendererInjectionKey, RendererInterface } from '../core/Renderer'\n\ninterface EffectComposerSetupInterface {\n  renderer?: RendererInterface\n  composer?: EffectComposer\n}\n\nexport interface EffectComposerInterface extends EffectComposerSetupInterface {\n  addPass(pass: Pass): void\n  removePass(pass: Pass): void\n}\n\nexport const ComposerInjectionKey: InjectionKey<EffectComposerInterface> = Symbol('Composer')\n\nexport default defineComponent({\n  setup(): EffectComposerSetupInterface {\n    const renderer = inject(RendererInjectionKey)\n    return { renderer }\n  },\n  provide() {\n    return {\n      [ComposerInjectionKey as symbol]: this,\n    }\n  },\n  created() {\n    if (!this.renderer) {\n      console.error('Renderer not found')\n      return\n    }\n    const renderer = this.renderer\n\n    const composer = new EffectComposer(this.renderer.renderer)\n    this.composer = composer\n    this.renderer.composer = composer\n\n    // this.renderer.onInit(() => {\n    renderer.addListener('init', () => {\n      renderer.renderer.autoClear = false\n      this.resize()\n      renderer.addListener('resize', this.resize)\n    })\n  },\n  unmounted() {\n    this.renderer?.removeListener('resize', this.resize)\n  },\n  methods: {\n    addPass(pass: Pass) {\n      this.composer?.addPass(pass)\n    },\n    removePass(pass: Pass) {\n      this.composer?.removePass(pass)\n    },\n    resize() {\n      if (this.composer && this.renderer) {\n        this.composer.setSize(this.renderer.size.width, this.renderer.size.height)\n      }\n    },\n  },\n  render() {\n    return this.$slots.default ? this.$slots.default() : []\n  },\n  __hmrId: 'EffectComposer',\n})\n","import { Pass } from 'three/examples/jsm/postprocessing/Pass'\nimport { defineComponent } from 'vue'\nimport { RendererInjectionKey, RendererInterface } from '../core/Renderer'\nimport { ComposerInjectionKey, EffectComposerInterface } from './EffectComposer'\n\nexport interface EffectSetupInterface {\n  renderer?: RendererInterface\n  composer?: EffectComposerInterface\n  pass?: Pass\n}\n\nexport default defineComponent({\n  // inject for sub components\n  inject: {\n    renderer: RendererInjectionKey as symbol,\n    composer: ComposerInjectionKey as symbol,\n  },\n  emits: ['ready'],\n  setup(): EffectSetupInterface {\n    return {}\n  },\n  created() {\n    if (!this.composer) {\n      console.error('Missing parent EffectComposer')\n    }\n    if (!this.renderer) {\n      console.error('Missing parent Renderer')\n    }\n  },\n  unmounted() {\n    if (this.pass) {\n      this.composer?.removePass(this.pass);\n      (this.pass as any).dispose?.()\n    }\n  },\n  methods: {\n    initEffectPass(pass: Pass) {\n      this.pass = pass\n      this.composer?.addPass(pass)\n      this.$emit('ready', pass)\n    },\n  },\n  render() {\n    return []\n  },\n  __hmrId: 'EffectPass',\n})\n","import { defineComponent } from 'vue'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\nimport EffectPass from './EffectPass'\n\nexport default defineComponent({\n  extends: EffectPass,\n  created() {\n    if (!this.renderer) return\n\n    if (!this.renderer.scene) {\n      console.error('Missing Scene')\n      return\n    }\n    if (!this.renderer.camera) {\n      console.error('Missing Camera')\n      return\n    }\n    const pass = new RenderPass(this.renderer.scene, this.renderer.camera)\n    this.initEffectPass(pass)\n  },\n  __hmrId: 'RenderPass',\n})\n","import { defineComponent, watch } from 'vue'\nimport { BokehPass } from 'three/examples/jsm/postprocessing/BokehPass.js'\nimport EffectPass from './EffectPass'\n\nconst props = {\n  focus: { type: Number, default: 1 },\n  aperture: { type: Number, default: 0.025 },\n  maxblur: { type: Number, default: 0.01 },\n} as const\n\nexport default defineComponent({\n  extends: EffectPass,\n  props,\n  created() {\n    if (!this.renderer) return\n\n    if (!this.renderer.scene) {\n      console.error('Missing Scene')\n      return\n    }\n    if (!this.renderer.camera) {\n      console.error('Missing Camera')\n      return\n    }\n\n    const params = {\n      focus: this.focus,\n      aperture: this.aperture,\n      maxblur: this.maxblur,\n      width: this.renderer.size.width,\n      height: this.renderer.size.height,\n    }\n\n    const pass = new BokehPass(this.renderer.scene, this.renderer.camera, params)\n\n    Object.keys(props).forEach(p => {\n      // @ts-ignore\n      watch(() => this[p], (value) => { pass.uniforms[p].value = value })\n    })\n\n    this.initEffectPass(pass)\n  },\n  __hmrId: 'BokehPass',\n})\n","import { defineComponent, watch } from 'vue'\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass.js'\nimport EffectPass from './EffectPass'\n\nconst props = {\n  noiseIntensity: { type: Number, default: 0.5 },\n  scanlinesIntensity: { type: Number, default: 0.05 },\n  scanlinesCount: { type: Number, default: 4096 },\n  grayscale: { type: Number, default: 0 },\n} as const\n\nexport default defineComponent({\n  extends: EffectPass,\n  props,\n  created() {\n    const pass = new FilmPass(this.noiseIntensity, this.scanlinesIntensity, this.scanlinesCount, this.grayscale)\n\n    Object.keys(props).forEach(p => {\n      // @ts-ignore\n      watch(() => this[p], (value) => { pass.uniforms[p].value = value })\n    })\n\n    this.initEffectPass(pass)\n  },\n  __hmrId: 'FilmPass',\n})\n","import { defineComponent } from 'vue'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader.js'\nimport EffectPass from './EffectPass'\nimport { SizeInterface } from '../core/useThree'\n\nexport default defineComponent({\n  extends: EffectPass,\n  created() {\n    const pass = new ShaderPass(FXAAShader)\n\n    // resize will be first called in renderer init\n    this.renderer?.addListener('resize', this.resize)\n\n    this.initEffectPass(pass)\n  },\n  unmounted() {\n    this.renderer?.removeListener('resize', this.resize)\n  },\n  methods: {\n    resize({ size }: { size: SizeInterface }) {\n      if (this.pass) {\n        const { resolution } = (this.pass as ShaderPass).material.uniforms\n        resolution.value.x = 1 / size.width\n        resolution.value.y = 1 / size.height\n      }\n    },\n  },\n  __hmrId: 'FXAAPass',\n})\n","import { defineComponent, watch } from 'vue'\nimport { HalftonePass } from 'three/examples/jsm/postprocessing/HalftonePass.js'\nimport EffectPass from './EffectPass'\n\nconst props = {\n  shape: { type: Number, default: 1 },\n  radius: { type: Number, default: 4 },\n  rotateR: { type: Number, default: Math.PI / 12 * 1 },\n  rotateG: { type: Number, default: Math.PI / 12 * 2 },\n  rotateB: { type: Number, default: Math.PI / 12 * 3 },\n  scatter: { type: Number, default: 0 },\n} as const\n\nexport default defineComponent({\n  extends: EffectPass,\n  props,\n  created() {\n    if (!this.renderer) return\n\n    const pass = new HalftonePass(this.renderer.size.width, this.renderer.size.height, {})\n\n    Object.keys(props).forEach(p => {\n      // @ts-ignore\n      pass.uniforms[p].value = this[p]\n      // @ts-ignore\n      watch(() => this[p], (value) => { pass.uniforms[p].value = value })\n    })\n\n    this.initEffectPass(pass)\n  },\n  __hmrId: 'HalftonePass',\n})\n","import { defineComponent } from 'vue'\nimport { SMAAPass } from 'three/examples/jsm/postprocessing/SMAAPass.js'\nimport EffectPass from './EffectPass'\n\nexport default defineComponent({\n  extends: EffectPass,\n  created() {\n    if (!this.renderer) return\n\n    const pass = new SMAAPass(this.renderer.size.width, this.renderer.size.height)\n    this.initEffectPass(pass)\n  },\n  __hmrId: 'SMAAPass',\n})\n","import { defineComponent } from 'vue'\nimport { SSAOPass } from 'three/examples/jsm/postprocessing/SSAOPass.js'\nimport EffectPass from './EffectPass'\n\nexport default defineComponent({\n  extends: EffectPass,\n  props: {\n    options: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  created() {\n    if (!this.renderer) return\n\n    if (!this.renderer.scene) {\n      console.error('Missing Scene')\n      return\n    }\n    if (!this.renderer.camera) {\n      console.error('Missing Camera')\n      return\n    }\n\n    const pass = new SSAOPass(\n      this.renderer.scene,\n      this.renderer.camera,\n      this.renderer.size.width,\n      this.renderer.size.height\n    )\n\n    Object.keys(this.options).forEach(key => {\n      // @ts-ignore\n      pass[key] = this.options[key]\n    })\n\n    this.initEffectPass(pass)\n  },\n  __hmrId: 'SSAOPass',\n})\n","export default {\n  uniforms: {},\n  vertexShader: `\n    varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  `,\n  fragmentShader: `\n    varying vec2 vUv;\n    void main() {\n      gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n    }\n  `,\n}\n","// From https://github.com/evanw/glfx.js\nimport { Vector2 } from 'three'\nimport DefaultShader from './default'\n\nexport default {\n  uniforms: {\n    tDiffuse: { value: null },\n    blurRadius: { value: 0 },\n    gradientRadius: { value: 0 },\n    start: { value: new Vector2() },\n    end: { value: new Vector2() },\n    delta: { value: new Vector2() },\n    texSize: { value: new Vector2() },\n  },\n  vertexShader: DefaultShader.vertexShader,\n  fragmentShader: `\n    uniform sampler2D tDiffuse;\n    uniform float blurRadius;\n    uniform float gradientRadius;\n    uniform vec2 start;\n    uniform vec2 end;\n    uniform vec2 delta;\n    uniform vec2 texSize;\n    varying vec2 vUv;\n\n    float random(vec3 scale, float seed) {\n      /* use the fragment position for a different seed per-pixel */\n      return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n    }\n\n    void main() {\n      vec4 color = vec4(0.0);\n      float total = 0.0;\n\n      /* randomize the lookup values to hide the fixed number of samples */\n      float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n\n      vec2 normal = normalize(vec2(start.y - end.y, end.x - start.x));\n      float radius = smoothstep(0.0, 1.0, abs(dot(vUv * texSize - start, normal)) / gradientRadius) * blurRadius;\n      for (float t = -30.0; t <= 30.0; t++) {\n          float percent = (t + offset - 0.5) / 30.0;\n          float weight = 1.0 - abs(percent);\n          vec4 texel = texture2D(tDiffuse, vUv + delta / texSize * percent * radius);\n          // vec4 texel2 = texture2D(tDiffuse, vUv + vec2(-delta.y, delta.x) / texSize * percent * radius);\n\n          /* switch to pre-multiplied alpha to correctly blur transparent images */\n          texel.rgb *= texel.a;\n          // texel2.rgb *= texel2.a;\n\n          color += texel * weight;\n          total += 2.0 * weight;\n      }\n\n      gl_FragColor = color / total;\n\n      /* switch back from pre-multiplied alpha */\n      gl_FragColor.rgb /= gl_FragColor.a + 0.00001;\n    }\n  `,\n}\n","import { defineComponent, PropType, watch } from 'vue'\nimport { Vector2 } from 'three'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\nimport EffectPass from './EffectPass'\nimport TiltShift from '../shaders/TiltShift'\nimport { Vector2PropInterface } from '../core/Object3D'\nimport { bindProp } from '../tools'\n\nconst props = {\n  blurRadius: { type: Number, default: 10 },\n  gradientRadius: { type: Number, default: 100 },\n  start: { type: Object as PropType<Vector2PropInterface>, default: () => ({ x: 0, y: 100 }) },\n  end: { type: Object as PropType<Vector2PropInterface>, default: () => ({ x: 10, y: 100 }) },\n} as const\n\ninterface TiltShiftPassSetupInterface {\n  uniforms1: {[name: string]: { value: any }}\n  uniforms2: {[name: string]: { value: any }}\n  pass1?: ShaderPass\n  pass2?: ShaderPass\n}\n\nexport default defineComponent({\n  extends: EffectPass,\n  props,\n  setup(): TiltShiftPassSetupInterface {\n    return { uniforms1: {}, uniforms2: {} }\n  },\n  created() {\n    if (!this.composer) return\n\n    this.pass1 = new ShaderPass(TiltShift)\n    this.pass2 = new ShaderPass(TiltShift)\n\n    const uniforms1 = this.uniforms1 = this.pass1.uniforms\n    const uniforms2 = this.uniforms2 = this.pass2.uniforms\n\n    // shared uniforms\n    uniforms2.blurRadius = uniforms1.blurRadius\n    uniforms2.gradientRadius = uniforms1.gradientRadius\n    uniforms2.start = uniforms1.start\n    uniforms2.end = uniforms1.end\n    uniforms2.texSize = uniforms1.texSize\n\n    bindProp(this, 'blurRadius', uniforms1.blurRadius, 'value')\n    bindProp(this, 'gradientRadius', uniforms1.gradientRadius, 'value')\n\n    this.updateFocusLine();\n\n    ['start', 'end'].forEach(p => {\n      // @ts-ignore\n      watch(() => this[p], this.updateFocusLine, { deep: true })\n    })\n\n    this.pass1.setSize = (width: number, height: number) => {\n      uniforms1.texSize.value.set(width, height)\n    }\n\n    this.initEffectPass(this.pass1)\n    this.composer.addPass(this.pass2)\n  },\n  unmounted() {\n    if (this.composer && this.pass2) this.composer.removePass(this.pass2)\n  },\n  methods: {\n    updateFocusLine() {\n      this.uniforms1.start.value.copy(this.start)\n      this.uniforms1.end.value.copy(this.end)\n      const dv = new Vector2().copy(this.end as Vector2).sub(this.start as Vector2).normalize()\n      this.uniforms1.delta.value.copy(dv)\n      this.uniforms2.delta.value.set(-dv.y, dv.x)\n    },\n  },\n  __hmrId: 'TiltShiftPass',\n})\n","import { defineComponent, watch } from 'vue'\nimport { Vector2 } from 'three'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js'\nimport EffectPass from './EffectPass'\n\nconst props = {\n  strength: { type: Number, default: 1.5 },\n  radius: { type: Number, default: 0 },\n  threshold: { type: Number, default: 0 },\n} as const\n\nexport default defineComponent({\n  extends: EffectPass,\n  props,\n  created() {\n    if (!this.renderer) return\n\n    const size = new Vector2(this.renderer.size.width, this.renderer.size.height)\n    const pass = new UnrealBloomPass(size, this.strength, this.radius, this.threshold)\n\n    Object.keys(props).forEach(p => {\n      // @ts-ignore\n      watch(() => this[p], (value) => { pass.uniforms[p].value = value })\n    })\n\n    this.initEffectPass(pass)\n  },\n  __hmrId: 'UnrealBloomPass',\n})\n","// From https://github.com/evanw/glfx.js\nimport { Vector2 } from 'three'\nimport DefaultShader from './default'\n\nexport default {\n  uniforms: {\n    tDiffuse: { value: null },\n    center: { value: new Vector2(0.5, 0.5) },\n    strength: { value: 0 },\n  },\n  vertexShader: DefaultShader.vertexShader,\n  fragmentShader: `\n    uniform sampler2D tDiffuse;\n    uniform vec2 center;\n    uniform float strength;\n    varying vec2 vUv;\n\n    float random(vec3 scale, float seed) {\n      /* use the fragment position for a different seed per-pixel */\n      return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n    }\n    \n    void main() {\n      vec4 color = vec4(0.0);\n      float total = 0.0;\n      vec2 toCenter = center - vUv;\n      \n      /* randomize the lookup values to hide the fixed number of samples */\n      float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n      \n      for (float t = 0.0; t <= 40.0; t++) {\n        float percent = (t + offset) / 40.0;\n        float weight = 4.0 * (percent - percent * percent);\n        vec4 texel = texture2D(tDiffuse, vUv + toCenter * percent * strength);\n\n        /* switch to pre-multiplied alpha to correctly blur transparent images */\n        texel.rgb *= texel.a;\n\n        color += texel * weight;\n        total += weight;\n      }\n\n      gl_FragColor = color / total;\n\n      /* switch back from pre-multiplied alpha */\n      gl_FragColor.rgb /= gl_FragColor.a + 0.00001;\n    }\n  `,\n}\n","import { defineComponent, PropType } from 'vue'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\nimport EffectPass from './EffectPass'\nimport ZoomBlur from '../shaders/ZoomBlur'\nimport { Vector2PropInterface } from '../core/Object3D'\nimport { bindProp } from '../tools'\n\nexport default defineComponent({\n  extends: EffectPass,\n  props: {\n    center: { type: Object as PropType<Vector2PropInterface>, default: () => ({ x: 0.5, y: 0.5 }) },\n    strength: { type: Number, default: 0.5 },\n  },\n  created() {\n    const pass = new ShaderPass(ZoomBlur)\n\n    bindProp(this, 'center', pass.uniforms.center, 'value')\n    bindProp(this, 'strength', pass.uniforms.strength, 'value')\n\n    this.initEffectPass(pass)\n  },\n  __hmrId: 'ZoomBlurPass',\n})\n","import { App, createApp as _createApp } from 'vue'\nimport * as TROIS from './index'\n\nexport const TroisJSVuePlugin = {\n  install(app: App): void {\n    const comps = [\n      'Camera',\n      'OrthographicCamera',\n      'PerspectiveCamera',\n      'Raycaster',\n      'Renderer',\n      'Scene',\n      'Group',\n\n      'CubeCamera',\n\n      'AmbientLight',\n      'DirectionalLight',\n      'HemisphereLight',\n      'PointLight',\n      'RectAreaLight',\n      'SpotLight',\n\n      'BasicMaterial',\n      'LambertMaterial',\n      'MatcapMaterial',\n      'PhongMaterial',\n      'PhysicalMaterial',\n      'PointsMaterial',\n      'ShaderMaterial',\n      'StandardMaterial',\n      'SubSurfaceMaterial',\n      'ToonMaterial',\n\n      'Texture',\n      'CubeTexture',\n\n      'BufferGeometry',\n\n      'Mesh',\n\n      'Box', 'BoxGeometry',\n      'Circle', 'CircleGeometry',\n      'Cone', 'ConeGeometry',\n      'Cylinder', 'CylinderGeometry',\n      'Dodecahedron', 'DodecahedronGeometry',\n      'Icosahedron', 'IcosahedronGeometry',\n      'Lathe', 'LatheGeometry',\n      'Octahedron', 'OctahedronGeometry',\n      'Plane', 'PlaneGeometry',\n      'Polyhedron', 'PolyhedronGeometry',\n      'Ring', 'RingGeometry',\n      'Sphere', 'SphereGeometry',\n      'Tetrahedron', 'TetrahedronGeometry',\n      'Text',\n      'Torus', 'TorusGeometry',\n      'TorusKnot', 'TorusKnotGeometry',\n      'Tube', 'TubeGeometry',\n\n      'Image',\n      'InstancedMesh',\n      'Points',\n      'Sprite',\n\n      'FbxModel',\n      'GltfModel',\n\n      'BokehPass',\n      'EffectComposer',\n      'FilmPass',\n      'FXAAPass',\n      'HalftonePass',\n      'RenderPass',\n      'SAOPass',\n      'SMAAPass',\n      'SSAOPass',\n      'TiltShiftPass',\n      'UnrealBloomPass',\n      'ZoomBlurPass',\n    ]\n\n    comps.forEach(comp => {\n      // @ts-ignore\n      app.component(comp, TROIS[comp])\n    })\n  },\n}\n\nexport function createApp(params: any): App {\n  return _createApp(params).use(TroisJSVuePlugin)\n}\n","import { Texture, TextureLoader } from 'three'\n\nexport interface TextureConfigInterface {\n  src: string\n}\n\nexport interface TexturesInterface {\n  loader: TextureLoader\n  count: number\n  textures: Texture[],\n  loadProgress: number\n  loadTextures(images: TextureConfigInterface[], cb: {() : void}): void\n  dispose(): void\n}\n\nexport default function useTextures(): TexturesInterface {\n  const obj: TexturesInterface = {\n    loader: new TextureLoader(),\n    count: 0,\n    textures: [],\n    loadProgress: 0,\n    loadTextures,\n    dispose,\n  }\n  return obj\n\n  function loadTextures(images: TextureConfigInterface[], cb: {() : void}) {\n    obj.count = images.length\n    obj.textures.splice(0)\n    obj.loadProgress = 0\n    Promise.all(images.map(loadTexture)).then(cb)\n  }\n\n  function loadTexture(img: TextureConfigInterface, index: number) {\n    return new Promise(resolve => {\n      obj.loader.load(\n        img.src,\n        texture => {\n          obj.loadProgress += 1 / obj.count\n          obj.textures[index] = texture\n          resolve(texture)\n        }\n      )\n    })\n  }\n\n  function dispose() {\n    obj.textures.forEach(t => t.dispose())\n  }\n}\n"],"names":["applyObjectProps","dst","options","setter","key","value","bindObjectProp","src","prop","apply","r","toRef","watch","bindObjectProps","ref","setFromProp","o","bindProps","props","bindProp","srcProp","dstProp","_dstProp","propsValues","exclude","values","lerp","value1","value2","amount","limit","val","min","max","MATCAP_ROOT","DEFAULT_MATCAP","getMatcapUrl","hash","format","fileName","getMatcapFormatString","useRaycaster","camera","resetPosition","Vector3","raycaster","Raycaster","position","plane","Plane","coords","objects","recursive","usePointer","domElement","intersectObjects","intersectRecursive","touch","resetOnEnd","onEnter","onMove","onLeave","onClick","onIntersectEnter","onIntersectOver","onIntersectMove","onIntersectLeave","onIntersectClick","Vector2","positionN","positionV3","obj","addListeners","removeListeners","intersect","reset","updatePosition","event","x","y","rect","_intersectObjects","getIntersectObjects","intersects","offObjects","iMeshes","_a","_b","_c","object","component","getComponent","InstancedMesh","overEvent","enterEvent","moveEvent","leaveEvent","pointerEnter","pointerMove","pointerClick","pointerLeave","parent","useThree","params","config","size","beforeRenderCallbacks","renderer","createRenderer","init","dispose","render","renderC","setSize","addIntersectObject","removeIntersectObject","WebGLRenderer","onResize","initPointer","cameraCtrl","OrbitControls","onBeforeRender","pointerConf","pointer","cb","c","i","elt","width","height","pCamera","oCamera","wsize","getCameraSize","vFOV","h","RendererInjectionKey","defineComponent","attrs","initCallbacks","mountedCallbacks","afterRenderCallbacks","resizeCallbacks","canvas","matches","three","watchEffect","renderFn","scene","composer","e","type","callbacks","index","time","p$1","cameraSetProp","updateProjectionMatrix","OrthographicCamera","Camera","inject","p","PerspectiveCamera","v","SceneInjectionKey","Scene","provide","setBackground","Color","Texture","pointerProps","o3d","instance","getCurrentInstance","Group","Object3D","emptyCallBack","CubeCamera","rendererC","cubeRT","WebGLCubeRenderTarget","RGBAFormat","LinearMipmapLinearFilter","cubeCamera","updateRT","m","onUnmounted","MeshInjectionKey","Mesh","mesh","TMesh","geometry","material","prev","oldGeo","meshComponent","name","createGeometry","Geometry","bufferAttributes","BufferGeometry","attribute","bufferAttribute","BufferAttribute","geometryComponent","comp","BoxGeometry","CircleGeometry","ConeGeometry","CylinderGeometry","DodecahedronGeometry","ExtrudeGeometry","IcosahedronGeometry","LatheGeometry","OctahedronGeometry","PlaneGeometry","PolyhedronGeometry","RingGeometry","SphereGeometry","ShapeGeometry","TetrahedronGeometry","TorusGeometry","TorusKnotGeometry","Curve","curve","CatmullRomCurve3","TubeGeometry","points","updateTubeGeometryPoints","tube","radialSegments","radius","tubularSegments","closed","frames","pAttribute","nAttribute","normal","P","updateSegment","N","B","j","sin","cos","n","SpotLight","DirectionalLight","light","AmbientLight","Light","HemisphereLight","PointLight","RectAreaLight","RectAreaLightUniformsLib","lightHelper","RectAreaLightHelper","MaterialInjectionKey","BaseMaterial","needsUpdate","dstVal","texture","materialComponent","createMaterial","BasicMaterial","opts","MeshBasicMaterial","LambertMaterial","MeshLambertMaterial","PhongMaterial","MeshPhongMaterial","PhysicalMaterial","MeshPhysicalMaterial","PointsMaterial","TPointsMaterial","ShadowMaterial","TShadowMaterial","StandardMaterial","MeshStandardMaterial","ToonMaterial","MeshToonMaterial","MatcapMaterial","TextureLoader","MeshMatcapMaterial","defaultVertexShader","defaultFragmentShader","ShaderMaterial","replaceAll","string","find","replace","meshphongFragHead","ShaderChunk","meshphongFragBody","SubsurfaceScatteringShader","UniformsUtils","ShaderLib","SubSurfaceMaterial","Material","uniforms","d","t","CubeTexture","CubeReflectionMapping","CubeTextureLoader","VideoTexture","video","Box","Circle","Cone","Cylinder","Dodecahedron","Icosahedron","Lathe","Octahedron","Polyhedron","Ring","Sphere","Tetrahedron","Text","loader","FontLoader","font","TextGeometry","Torus","TorusKnot","Tube","DoubleSide","screen","iW","iH","iRatio","w","Sprite","SpriteMaterial","iWidth","iHeight","positions","Points","model","progress","error","GLTF","Model","GLTFLoader","gltf","FBX","FBXLoader","fbx","ComposerInjectionKey","EffectComposer","pass","s$1","RenderPass","EffectPass","BokehPass","FilmPass","FXAAPass","ShaderPass","FXAAShader","resolution","HalftonePass","SMAAPass","SSAOPass","r$1","DefaultShader","TiltShift","uniforms1","uniforms2","dv","UnrealBloomPass","ZoomBlur","TroisJSVuePlugin","app","TROIS","createApp","_createApp","useTextures","loadTextures","images","loadTexture","img","resolve"],"mappings":"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"}